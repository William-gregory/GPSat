Search.setIndex({"docnames": ["GPSat", "GPSat.models", "GPSat.models.multioutput", "cli_examples", "config_classes", "dataloader", "index", "installation", "local_experts", "models/base_model", "models/gpflow_models", "models/gpytorch_models", "models/pure_python", "models/sklearn_models", "modules", "notebooks/1d_local_expert_model_part_1", "notebooks/1d_local_expert_model_part_2", "notebooks/bin_data", "notebooks/dataloader", "notebooks/gp_regression", "notebooks/inline_example", "notebooks/using_gpus", "postprocessing", "utils"], "filenames": ["GPSat.rst", "GPSat.models.rst", "GPSat.models.multioutput.rst", "cli_examples.rst", "config_classes.rst", "dataloader.rst", "index.rst", "installation.rst", "local_experts.rst", "models/base_model.rst", "models/gpflow_models.rst", "models/gpytorch_models.rst", "models/pure_python.rst", "models/sklearn_models.rst", "modules.rst", "notebooks/1d_local_expert_model_part_1.ipynb", "notebooks/1d_local_expert_model_part_2.ipynb", "notebooks/bin_data.ipynb", "notebooks/dataloader.ipynb", "notebooks/gp_regression.ipynb", "notebooks/inline_example.ipynb", "notebooks/using_gpus.ipynb", "postprocessing.rst", "utils.rst"], "titles": ["GPSat package", "Models", "GPSat.models.multioutput package", "Command Line Examples", "Configuration dataclasses", "Dataloader", "Welcome to GPSat\u2019s documentation!", "Installation", "Local expert optimal interpolation", "Base model", "GPflow models", "GPyTorch models", "Pure python models", "Scikit-learn models", "GPSat", "Modelling with local GP experts (Part I): A 1D case study", "Modelling with local GP experts (Part II): Using the <code class=\"docutils literal notranslate\"><span class=\"pre\">LocalExpertOI</span></code> API", "Bin Data Examples", "DataLoader Examples", "Basic Gaussian process regression (GPR)", "Inline Example of Local Expert \u2018Optimal Interpolation\u2019 on Satellite Data", "Using GPUs to accelerate training and inference", "Postprocessing", "Utils"], "terms": {"class": [0, 4, 5, 8, 9, 10, 11, 12, 13, 16, 22, 23], "bindata": [0, 14], "base": [0, 1, 4, 5, 8, 10, 11, 12, 13, 19, 21, 22, 23], "object": [0, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 20, 22, 23], "file": [0, 4, 5, 6, 7, 8, 10, 16, 17, 20, 22, 23], "none": [0, 4, 5, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23], "sourc": [0, 4, 5, 7, 16, 17, 18, 20, 23], "load_bi": [0, 17], "tabl": [0, 4, 5, 8, 14, 16, 18, 20, 22, 23], "where": [0, 4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 19, 21, 22, 23], "batch": [0, 10, 17], "fals": [0, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23], "add_output_col": 0, "bin_config": [0, 17], "chunksiz": 0, "5000000": 0, "data_load_kwarg": 0, "bin": [0, 5, 6, 7, 23], "dataset": [0, 4, 5, 10, 16, 17, 18, 20, 21], "either": [0, 4, 5, 8, 10, 23], "singl": [0, 3, 5, 6, 8, 10, 15, 16, 17, 23], "pass": [0, 4, 5, 8, 9, 10, 11, 15, 16, 18, 20, 21, 23], "provid": [0, 3, 4, 5, 6, 8, 18, 22, 23], "configur": [0, 3, 6, 8, 18, 22, 23], "thi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23], "method": [0, 4, 5, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 23], "decid": 0, "between": [0, 10, 19, 20, 23], "process": [0, 5, 6, 7, 8, 10, 12, 13, 17, 20, 23], "entir": [0, 4], "onc": [0, 8, 17], "chunk": [0, 6, 15], "paramet": [0, 4, 5, 8, 9, 10, 11, 12, 13, 16, 18, 19, 21, 22, 23], "It": [0, 4, 5, 23], "appli": [0, 4, 5, 8, 10, 20, 22, 23], "accord": 0, "specifi": [0, 4, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23], "along": [0, 5, 6, 23], "ani": [0, 5, 9, 11, 12, 13, 15, 16, 20, 22, 23], "preprocess": [0, 23], "defin": [0, 4, 5, 9, 10, 11, 12, 13, 18, 19, 23], "col_func": [0, 4, 5, 14, 17, 20], "col_select": [0, 4, 5, 14, 18], "row_select": [0, 4, 5, 14, 17, 20], "addit": [0, 4, 5, 7, 9, 10, 18, 19, 20, 21, 23], "column": [0, 4, 5, 8, 9, 15, 16, 17, 20, 22, 23], "can": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23], "ad": [0, 4, 5, 20, 23], "output": [0, 4, 5, 9, 12, 17, 19, 20, 22, 23], "us": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 22, 23], "The": [0, 4, 5, 6, 8, 9, 10, 12, 15, 16, 21, 22, 23], "i": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 23], "capabl": [0, 13, 21], "handl": [0, 5, 6, 10, 23], "both": [0, 5, 8, 15, 21, 23], "small": [0, 6], "veri": 0, "larg": [0, 4, 6, 10, 15, 17, 21, 23], "effici": [0, 5, 6, 10], "str": [0, 4, 5, 8, 9, 10, 20, 22, 23], "option": [0, 4, 5, 7, 8, 9, 10, 22, 23], "path": [0, 3, 4, 5, 7, 8, 16, 17, 18, 20, 22, 23], "contain": [0, 4, 5, 8, 9, 10, 12, 15, 16, 18, 22, 23], "default": [0, 3, 4, 5, 8, 9, 10, 18, 19, 20, 22, 23], "an": [0, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 17, 18, 19, 21, 22, 23], "altern": [0, 4, 18, 19, 20, 23], "specif": [0, 4, 5, 7, 8, 19, 20, 23], "data": [0, 3, 5, 6, 8, 9, 10, 11, 12, 13, 15, 19, 21, 23], "could": [0, 5, 17, 19, 20, 21, 23], "anoth": [0, 15], "identifi": [0, 17, 18, 20], "depend": [0, 4, 5, 12, 15, 23], "context": 0, "If": [0, 4, 5, 7, 8, 9, 10, 19, 22, 23], "ar": [0, 3, 4, 5, 7, 8, 9, 10, 15, 16, 18, 19, 20, 21, 22, 23], "take": [0, 3, 5, 11, 16, 18, 19, 21, 22, 23], "preced": [0, 23], "list": [0, 1, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 22, 23], "name": [0, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23], "which": [0, 3, 4, 5, 6, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23], "load": [0, 4, 5, 14, 16, 17, 20, 23], "true": [0, 4, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23], "each": [0, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 22, 23], "uniqu": [0, 5, 16, 17, 18, 23], "combin": [0, 5, 12, 18], "valu": [0, 4, 5, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 22, 23], "within": [0, 4, 5, 10, 11, 15, 16, 19, 22, 23], "from": [0, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 17, 19, 20, 21, 22, 23], "dict": [0, 4, 5, 8, 9, 10, 11, 12, 16, 18, 20, 22, 23], "condit": [0, 4, 5, 16, 19], "filter": [0, 5, 18, 19], "row": [0, 4, 5, 18, 23], "express": [0, 4, 5, 16, 17, 18, 19, 20, 23], "dictionari": [0, 4, 5, 8, 9, 10, 12, 16, 18, 19, 22, 23], "repres": [0, 5, 16, 23], "sql": 0, "like": [0, 10, 23], "claus": 0, "bool": [0, 4, 5, 8, 9, 10, 18, 22, 23], "map": [0, 5], "new": [0, 4, 5, 9, 16, 18, 19, 20, 23], "function": [0, 4, 5, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23], "datafram": [0, 4, 5, 8, 9, 10, 15, 16, 17, 18, 20, 22, 23], "after": [0, 4, 5, 8, 10, 19], "includ": [0, 4, 5, 16, 17, 20, 23], "size": [0, 10, 12, 17, 19, 20, 23], "criteria": [0, 4, 5, 20], "requir": [0, 4, 5, 7, 8, 10, 20, 23], "int": [0, 4, 5, 8, 9, 10, 19, 22, 23], "number": [0, 4, 5, 8, 9, 10, 12, 16, 20, 23], "read": [0, 4, 5, 6, 8, 9, 16, 19, 23], "memori": [0, 4, 5, 10, 21, 23], "time": [0, 5, 6, 8, 12, 16, 19, 20, 21, 23], "applic": [0, 4, 5, 8, 9, 11, 12, 13, 16, 23], "when": [0, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 20, 21, 23], "5": [0, 4, 5, 11, 16, 17, 18, 19, 20, 21, 23], "000": [0, 15, 16, 19, 20], "keyword": [0, 4, 5, 9, 10, 18, 20, 23], "argument": [0, 3, 4, 5, 9, 10, 16, 18, 19, 20, 21, 23], "see": [0, 4, 5, 7, 8, 9, 10, 15, 16, 18, 19, 20, 21, 23], "return": [0, 4, 5, 8, 9, 10, 11, 13, 15, 17, 18, 20, 22, 23], "df_bin": 0, "panda": [0, 4, 5, 9, 10, 15, 16, 17, 18, 20, 22, 23], "A": [0, 4, 5, 6, 8, 9, 10, 11, 12, 13, 17, 18, 19, 22, 23], "stat": [0, 15, 16, 17, 19, 23], "statist": [0, 5, 10, 23], "analyz": 0, "distribut": [0, 10, 16, 19], "qualiti": [0, 10, 19], "rais": [0, 5, 23], "assertionerror": [0, 5, 23], "note": [0, 4, 5, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23], "offer": 0, "flexibl": [0, 5, 16], "variou": [0, 5, 16, 23], "allow": [0, 4, 5, 6, 8, 9, 10, 16, 17, 18, 22, 23], "choic": [0, 4, 5], "mode": [0, 5, 18, 20], "control": [0, 19, 22], "make": [0, 4, 7, 8, 9, 10, 12, 15, 16, 18, 19, 20, 22, 23], "suitabl": 0, "scenario": 0, "rang": [0, 5, 20, 23], "fit": [0, 4, 9, 11, 13, 15, 16, 19], "easili": 0, "manag": 0, "usag": [0, 6, 8], "effect": [0, 10, 17, 18], "select": [0, 3, 4, 5, 8, 10, 16, 20, 23], "abil": 0, "add": [0, 4, 5, 6, 7, 8, 18, 20, 22, 23], "signific": 0, "custom": [0, 4, 5, 6, 10, 23], "enabl": [0, 4, 6, 10, 15, 16, 19, 20, 21], "user": [0, 4, 5], "tailor": 0, "analysi": 0, "need": [0, 5, 7, 11, 16, 17, 18, 20], "bin_data_all_at_onc": [0, 14, 17], "through": [0, 4, 9, 23], "befor": [0, 4, 5, 16, 19, 21, 23], "stats_df": [0, 17, 20], "design": [0, 5], "For": [0, 4, 5, 10, 15, 16, 19, 21, 23], "consid": [0, 4, 5, 10, 15, 16, 19, 21], "bin_data_by_batch": [0, 14], "avoid": [0, 5, 20], "issu": [0, 5, 15, 23], "dynam": [0, 4, 5], "logic": 0, "enrich": 0, "metric": [0, 15, 16, 19, 20], "categor": [0, 23], "deriv": [0, 5], "aggreg": 0, "particularli": 0, "cannot": [0, 4, 6, 23], "result": [0, 4, 5, 8, 9, 10, 15, 16, 19, 20, 21, 22, 23], "approach": [0, 6, 10, 12, 15], "help": [0, 5], "while": [0, 5, 11, 23], "comprehens": 0, "all": [0, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23], "stats_al": 0, "them": [0, 3, 5, 10, 11, 15, 19], "how": [0, 3, 4, 5, 7, 15, 16, 17, 18, 23], "divid": [0, 20, 23], "individu": [0, 18], "oper": [0, 4, 5, 15, 16, 18, 19, 20, 21, 23], "ensur": [0, 4, 5, 8, 10, 17, 18], "complex": [0, 10, 15], "task": 0, "insight": 0, "static": [0, 4, 5], "bin_wrapp": [0, 14], "df": [0, 4, 5, 16, 17, 18, 19, 20, 23], "print_stat": 0, "perform": [0, 5, 6, 8, 10, 11, 12, 15, 16, 19, 20, 21, 23], "print": [0, 3, 5, 15, 16, 18, 19, 20, 23], "modif": 0, "wrap": [0, 5], "kei": [0, 4, 5, 8, 10, 16, 18, 20, 22, 23], "modifi": [0, 4, 5, 17, 20, 23], "seri": [0, 5, 10, 20, 23], "basic": [0, 4, 6, 9], "preliminari": 0, "examin": 0, "arbitrari": [0, 19, 23], "These": [0, 4, 5, 16, 23], "dictat": 0, "etc": [0, 3, 5, 16], "ds_bin": 0, "xarrai": [0, 4, 5, 18], "input": [0, 4, 5, 9, 10, 12, 16, 17, 19, 22, 23], "inform": [0, 5, 10, 15, 16, 19, 23], "decis": 0, "actual": 0, "structur": [0, 5], "similarli": 0, "summari": [0, 17, 20], "": [0, 4, 5, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23], "vari": [0, 4, 6, 15], "wide": 0, "its": [0, 12, 23], "mai": [0, 5, 10, 23], "adjust": 0, "significantli": 0, "behavior": 0, "outcom": 0, "detail": [0, 4, 5, 8, 10, 12, 16, 18, 21, 23], "refer": [0, 3, 4, 5, 10, 15, 16, 18, 19, 21, 22, 23], "document": [0, 4, 21], "wrapper": [0, 5, 17], "write_dataframe_to_t": [0, 14], "write": [0, 4, 6, 8, 16, 17, 20], "hdf5": [0, 4, 5, 7, 8, 16, 17, 20, 22], "save": [0, 4, 5, 8, 9, 10, 12, 16, 17, 20, 22], "assum": [0, 4, 5, 15, 16, 19, 22, 23], "access": [0, 16, 23], "writabl": 0, "storag": 0, "facilit": [0, 5], "easi": 0, "retriev": [0, 5, 8, 9, 19, 23], "further": [0, 16, 19], "written": [0, 4], "should": [0, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23], "alreadi": [0, 4, 5, 16, 20, 23], "final": [0, 15, 16], "form": [0, 4], "doe": [0, 5, 10, 15, 16, 19, 20, 21, 23], "exist": [0, 4, 5, 8, 10, 15, 16, 18, 20, 23], "creat": [0, 4, 5, 7, 16, 20, 21, 23], "store": [0, 4, 5, 8, 9, 15, 16, 17, 18, 19, 20, 22, 23], "append": [0, 4, 5, 8, 18, 20, 23], "format": [0, 4, 5, 16, 23], "versatil": 0, "support": [0, 5, 21, 23], "queri": [0, 4, 5, 18], "slice": [0, 5], "leverag": 0, "hdfstore": [0, 4, 5, 18], "mechan": [0, 15], "abstract": [0, 9], "awai": [0, 20], "mani": [0, 16, 20], "work": [0, 4, 5, 6, 7, 10, 17, 18, 20, 23], "directli": [0, 5], "also": [0, 4, 5, 7, 9, 10, 15, 16, 18, 19, 20, 21, 23], "raw_data_config": 0, "config": [0, 4, 6, 8, 20, 23], "run_info": [0, 5], "attribut": [0, 4, 5, 8, 9, 10, 22], "audit": 0, "trail": [0, 23], "wa": [0, 5, 10], "gener": [0, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 23], "crucial": [0, 10], "reproduc": [0, 4, 23], "understand": [0, 15, 19], "get_bin_data_config": [0, 14], "plot_wrapp": [0, 14, 17, 20], "plt_df": [0, 17, 20], "val_col": [0, 5, 17, 20, 23], "lon_col": [0, 20], "lon": [0, 5, 17, 18, 20, 23], "lat_col": [0, 20], "lat": [0, 5, 17, 18, 20, 23], "date_col": [0, 23], "date": [0, 4, 5, 17, 18, 20, 23], "scatter_plot_s": 0, "2": [0, 4, 5, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23], "plt_where": 0, "project": [0, 17, 20], "extent": [0, 17, 20], "hdf_store": [0, 5], "add_col": [0, 4, 5, 14], "col_func_dict": [0, 5], "filenam": [0, 5, 23], "verbos": [0, 4, 5, 8, 9, 10, 13, 15, 16, 19, 21, 23], "given": [0, 5, 9, 10, 11, 12, 13, 16, 19, 20, 22, 23], "pair": [0, 4, 5, 9, 19, 23], "comput": [0, 5, 6, 10, 11, 17, 19, 21, 23], "call": [0, 5, 10, 11, 15, 16, 19, 20, 21, 23], "tupl": [0, 5, 8, 23], "correspond": [0, 4, 5, 9, 10, 12, 15, 16, 19, 22, 23], "multipl": [0, 4, 5, 8, 23], "length": [0, 5, 9, 10, 12, 20, 23], "match": [0, 5, 9, 14, 17, 18, 20, 23], "empti": [0, 5, 9, 23], "determin": [0, 4, 5, 10, 18, 19, 20, 22, 23], "level": [0, 5, 23], "3": [0, 4, 5, 7, 8, 10, 12, 15, 17, 18, 19, 20, 21, 22, 23], "higher": [0, 5, 19], "messag": [0, 5, 23], "about": [0, 5, 16, 23], "being": [0, 5, 18, 22, 23], "manipul": [0, 5], "inplac": [0, 5, 17, 18], "assign": [0, 5, 10, 15, 16, 21, 23], "config_func": [0, 5, 14, 20, 23], "more": [0, 5, 8, 10, 19, 21, 23], "exampl": [0, 5, 6, 8, 10, 16, 23], "import": [0, 4, 5, 15, 16, 18, 19, 21, 23], "pd": [0, 4, 5, 15, 16, 17, 18, 20, 23], "add_on": [0, 5], "lambda": [0, 4, 5, 15, 16, 17, 18, 19, 20, 21, 23], "x": [0, 4, 5, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23], "1": [0, 4, 5, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23], "b": [0, 4, 5, 9, 10, 11, 12, 13, 17, 18, 23], "4": [0, 4, 5, 8, 15, 17, 18, 19, 20, 23], "6": [0, 5, 15, 16, 17, 18, 19, 20, 21, 23], "c": [0, 5, 18, 23], "func": [0, 4, 5, 12, 17, 18, 20, 23], "col_arg": [0, 4, 5, 18, 23], "0": [0, 4, 5, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23], "add_data_to_col": [0, 4, 5, 14, 18], "scalar": [0, 5, 12, 23], "replic": [0, 5, 12], "updat": [0, 5, 19], "progress": [0, 5, 17], "repeatedli": [0, 5], "copi": [0, 5, 18, 20], "entri": [0, 4, 5, 9, 10], "concaten": [0, 5, 23], "updated_df": [0, 5], "7": [0, 5, 16, 17, 18, 19, 20, 21, 23], "8": [0, 5, 10, 15, 16, 17, 18, 19, 20, 21, 23], "len": [0, 5, 17, 18, 20, 23], "out": [0, 4, 5, 10, 15, 18, 19, 20, 23], "12": [0, 5, 15, 16, 17, 18, 19, 20, 21], "48": [0, 5, 18], "x_rang": [0, 5, 17, 20, 23], "y_rang": [0, 5, 17, 20, 23], "grid_r": [0, 5, 17, 20, 23], "x_col": [0, 5, 17, 20, 23], "y_col": [0, 5, 17, 20, 23], "y": [0, 4, 5, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23], "bin_statist": [0, 5, 17, 23], "mean": [0, 5, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23], "return_bin_cent": [0, 5], "2d": [0, 5, 10, 22, 23], "grid": [0, 5, 16, 19, 20, 23], "well": [0, 5, 9, 12, 15, 20], "edg": [0, 5, 23], "center": [0, 4, 5, 10, 20, 23], "float": [0, 4, 5, 9, 10, 11, 15, 17, 20, 22, 23], "min": [0, 5, 14, 17, 18, 20, 22, 23], "max": [0, 5, 14, 17, 18, 20, 22, 23], "4500000": [0, 5, 17, 23], "resolut": [0, 5, 23], "kilomet": [0, 5, 23], "must": [0, 4, 5, 8, 9, 10, 17, 18, 19, 23], "median": [0, 5, 17], "count": [0, 5, 17], "sum": [0, 5, 23], "callabl": [0, 5, 23], "instead": [0, 4, 5, 10, 11, 16, 18, 19, 21, 23], "binned_data": [0, 5, 17], "numpi": [0, 4, 5, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 23], "ndarrai": [0, 5, 9, 10, 23], "x_out": [0, 4, 5], "y_out": [0, 5], "classmethod": [0, 5], "bin_data_bi": [0, 5, 14, 20], "by_col": [0, 5, 17, 20], "limit": [0, 5], "10000": [0, 5, 10], "dataarrai": [0, 4, 5], "ha": [0, 1, 4, 5, 9, 10, 15, 19, 20, 23], "dimens": [0, 5, 6, 9, 10, 18, 19, 20, 22, 23], "separ": [0, 5, 10, 18], "axi": [0, 5, 17, 23], "minimum": [0, 4, 5, 8, 9, 23], "maximum": [0, 5, 9, 10, 23], "calcul": [0, 5, 23], "exce": [0, 5], "deprecationwarn": [0, 5], "deprec": [0, 5, 16], "dataprep": [0, 5, 14, 20], "do": [0, 3, 4, 5, 6, 8, 16, 21, 23], "meet": [0, 5], "connect_to_hdf_stor": [0, 14], "r": [0, 4, 7, 12, 19, 20, 22], "data_select": [0, 5, 14, 16, 17, 18, 20], "obj": [0, 5], "combine_wher": [0, 5], "AND": [0, 5, 18], "return_df": [0, 5, 17], "reset_index": [0, 4, 5, 17, 18, 20, 23], "drop": [0, 5, 16, 17, 20, 23], "close": [0, 5, 16, 18, 20], "kwarg": [0, 5, 9, 10, 11, 12, 13, 23], "xr": [0, 4, 5, 18], "type": [0, 4, 5, 10, 23], "reset": [0, 4, 5, 17, 18, 23], "index": [0, 4, 5, 6, 17, 18, 23], "try": [0, 5, 20, 23], "convert": [0, 4, 5, 17, 18, 20, 23], "have": [0, 4, 5, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23], "col": [0, 4, 5, 16, 17, 18, 20, 23], "comp": [0, 4, 5, 16, 17, 18, 20], "val": [0, 4, 5, 16, 17, 18, 20, 23], "e": [0, 3, 4, 5, 7, 9, 10, 11, 12, 13, 18, 19, 20, 22, 23], "g": [0, 3, 4, 5, 9, 10, 11, 12, 13, 18, 19, 22, 23], "t": [0, 3, 4, 5, 9, 10, 17, 20], "comparison": [0, 4, 5, 18, 23], "compar": [0, 4, 5, 10, 15, 16, 18, 19, 23], "against": [0, 5, 23], "filesystem": [0, 5], "valid": [0, 4, 5, 23], "OR": [0, 5], "case": [0, 3, 4, 5, 6, 8, 9, 10, 16, 17, 18, 19], "sensit": [0, 5], "suppli": [0, 5, 18, 20], "remov": [0, 3, 5, 16, 18, 20, 23], "onli": [0, 4, 5, 9, 10, 17, 19, 20, 21, 23], "found": [0, 4, 5, 7, 20, 21, 23], "selected_df": [0, 5], "file_suffix_engine_map": [0, 14], "csv": [0, 3, 4, 5, 17, 18, 20], "read_csv": [0, 4, 5, 18], "h5": [0, 3, 4, 5, 8, 16, 18, 20], "nc": [0, 5, 18], "netcdf4": [0, 5], "parquet": [0, 17], "read_parquet": [0, 18], "tsv": [0, 3, 5, 18], "zarr": [0, 5], "generate_local_expert_loc": [0, 14], "loc_dim": 0, "ref_data": [0, 5], "format_typ": 0, "mask": [0, 5], "include_col": 0, "keep_col": [0, 4], "sort_bi": [0, 4], "get_attribute_from_t": [0, 5, 14], "attribute_nam": [0, 5], "filepath": [0, 5], "string": [0, 4, 5, 10, 16, 18, 23], "open": [0, 4, 5, 20], "attempt": [0, 5, 15, 20, 23], "fail": [0, 5, 20, 23], "reason": [0, 5], "warn": [0, 5, 17, 20, 21, 23], "treat": [0, 5, 23], "notimplementederror": [0, 5, 23], "neither": [0, 5], "nor": [0, 5], "get_kei": [0, 14], "verobs": 0, "get_masks_for_expert_loc": [0, 5, 14], "el_mask": [0, 5], "obs_col": [0, 4, 5, 9, 10, 11, 12, 13, 14, 16, 20], "local": [0, 4, 5, 7, 9, 22, 23], "expert": [0, 5, 6, 9, 22, 23], "locat": [0, 5, 8, 9, 10, 12, 15, 22, 23], "two": [0, 4, 5, 8, 15, 16, 19, 21, 23], "wai": [0, 5, 18], "had_ob": [0, 5], "non": [0, 5, 10, 16, 23], "nan": [0, 5, 17, 18, 20, 23], "present": [0, 5, 16, 23], "grid_spac": [0, 5, 23], "regularli": [0, 5, 23], "space": [0, 5, 17, 20, 23], "expect": [0, 4, 5, 15, 17, 21, 23], "futur": [0, 5, 10, 15, 16], "coordin": [0, 4, 5, 9, 10, 12, 16, 17, 20, 23], "instruct": [0, 5, 7, 15, 16, 19, 20, 21], "element": [0, 5, 8, 23], "indic": [0, 4, 5, 9, 10, 16, 18, 19, 23], "regular": [0, 5, 17, 18, 20, 23], "dim": [0, 5], "By": [0, 5, 8, 15], "ignor": [0, 5, 11, 16], "same": [0, 4, 5, 8, 10, 15, 16, 17, 18, 20, 21, 22, 23], "boolean": [0, 4, 5, 12, 18, 23], "whether": [0, 5, 8, 10, 12, 22, 23], "point": [0, 4, 5, 6, 8, 9, 10, 12, 15, 16, 19, 20, 21, 23], "instanc": [0, 4, 5, 11, 22, 23], "extend": [0, 5, 10], "system": [0, 4, 5, 23], "differ": [0, 5, 8, 9, 10, 15, 16, 19, 22], "extens": [0, 5, 8, 16, 23], "lel_mask": [0, 5], "get_run_info": [0, 5, 14], "script_path": [0, 5], "current": [0, 4, 5, 8, 10, 17, 20, 23], "python": [0, 1, 3, 4, 5, 6, 7, 10, 11, 17, 21], "script": [0, 3, 5], "execut": [0, 5, 23], "environ": [0, 5, 7], "run": [0, 5, 8, 9, 10, 11, 14, 15, 20, 21, 23], "git": [0, 5, 7, 20, 23], "collect": [0, 5, 19], "interpret": [0, 5], "avail": [0, 5, 10, 15, 16, 19, 20, 21], "automat": [0, 4, 5, 16, 21], "follow": [0, 4, 5, 10, 15, 16, 18, 19, 20, 21, 23], "run_tim": [0, 5], "yyyi": [0, 5], "mm": [0, 5], "dd": [0, 5], "hh": [0, 5], "ss": [0, 5], "python_execut": [0, 5], "absolut": [0, 5], "relat": [0, 5, 16], "git_branch": [0, 5], "git_commit": [0, 5], "git_url": [0, 5], "git_modifi": [0, 5], "2023": [0, 5, 15, 16, 19, 21], "04": [0, 5, 20], "28": [0, 5, 15, 16], "10": [0, 4, 5, 8, 10, 16, 17, 18, 19, 20, 23], "30": [0, 5, 11, 19, 21, 23], "00": [0, 5, 18, 21], "usr": [0, 5, 7], "python3": [0, 5, 17, 21], "9": [0, 4, 5, 15, 16, 17, 18, 19, 20, 23], "your": [0, 5], "py": [0, 5, 17, 21], "branch": [0, 5, 23], "main": [0, 5, 8, 15, 16], "commit": [0, 5, 23], "123abc": [0, 5], "remot": [0, 5, 23], "http": [0, 5, 7, 17, 20, 23], "github": [0, 5, 7, 20], "com": [0, 5, 7, 17, 20, 23], "repo": [0, 5], "fetch": [0, 5], "push": [0, 5], "author": [0, 5, 23], "usernam": [0, 5], "username42": [0, 5], "gmail": [0, 5], "fri": [0, 5], "apr": [0, 5], "07": [0, 5, 16, 21], "22": [0, 5, 16, 20], "31": [0, 5], "0100": [0, 5], "bug": [0, 5, 21], "fix": [0, 4, 5, 10, 20], "list_of_fil": [0, 5], "modified_sinc": [0, 5], "last_commit": [0, 5], "get_where_list": [0, 5, 14], "global_select": [0, 4, 5, 14], "local_select": [0, 4, 5, 14, 16, 20], "ref_loc": [0, 5], "global": [0, 4, 5, 9, 15], "accept": [0, 5], "loc_col": [0, 4, 5], "src_col": [0, 4, 5], "evalu": [0, 5, 23], "construct": [0, 4, 5, 16], "respect": [0, 4, 5, 8, 10, 15, 19, 23], "get_where_list_legaci": [0, 5, 14], "read_in_bi": [0, 5], "consum": [0, 4, 5], "sub": [0, 5, 10, 17, 18, 20, 23], "hdf_tables_in_stor": [0, 5, 14], "get": [0, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23], "io": [0, 5, 17], "pytabl": [0, 5], "one": [0, 4, 5, 8, 9, 10, 11, 12, 13, 15, 19, 20, 23], "my_stor": [0, 5], "table1": [0, 5], "table2": [0, 5], "hdf5_file": [0, 5], "table3": [0, 5], "is_list_of_dict": [0, 5, 14], "lst": [0, 5], "check": [0, 4, 5, 8, 10, 15, 16, 21, 23], "test": [0, 5, 12, 15, 16, 18, 21], "otherwis": [0, 4, 5, 9, 23], "d": [0, 5, 9, 10, 18, 19, 20, 23], "kdt_tree_list_for_local_select": [0, 5, 14], "pre": [0, 1, 3, 4, 5, 10, 12, 16], "kdtree": [0, 5], "radiu": [0, 4, 5, 15, 16, 20, 22], "build": [0, 4, 5, 17], "spatial": [0, 5], "radii": [0, 5, 15, 16], "less": [0, 5, 16, 23], "than": [0, 4, 5, 8, 15, 16, 19, 21, 23], "multi": [0, 5, 18, 23], "dimension": [0, 5, 9, 10], "built": [0, 5], "kdt_tree": [0, 5], "engin": [0, 4, 5, 14, 17, 18], "source_kwarg": [0, 4, 5, 18], "combine_row_select": [0, 5], "other": [0, 4, 5, 9, 12, 15, 16, 17, 19, 20, 21, 23], "variabl": [0, 4, 5, 9, 10, 12, 15, 19, 22], "greater": [0, 4, 5, 8, 16, 23], "think": [0, 4, 5, 19], "databas": [0, 4, 5], "infer": [0, 4, 5, 6, 8, 10, 15, 16, 19, 20, 22, 23], "scipi": [0, 5, 10, 15, 16, 19, 23], "pydap": [0, 5], "h5netcdf": [0, 5], "pynio": [0, 5], "cfgrib": [0, 5], "pseudonetcdf": [0, 5], "read_": [0, 5, 18], "so": [0, 4, 5, 10, 16, 18, 19, 21, 23], "subset": [0, 4, 5, 9, 16], "initi": [0, 4, 5, 12, 20], "arrai": [0, 4, 5, 9, 10, 12, 15, 18, 19, 20, 23], "np": [0, 4, 5, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 23], "isnan": [0, 4, 5, 18], "frame": [0, 5, 16], "set": [0, 4, 5, 6, 8, 9, 10, 15, 16, 18, 19, 20, 21, 23], "head": [0, 5, 15, 16, 17, 18], "we": [0, 4, 5, 6, 9, 10, 12, 15, 16, 19, 21, 22, 23], "extract": [0, 5, 9, 15, 16, 18, 19, 20, 21, 23], "here": [0, 4, 5, 10, 15, 16, 19, 20], "under": [0, 4, 5, 11], "local_data_select": [0, 5, 14, 16, 20], "reference_loc": [0, 5], "wise": [0, 5], "precomput": [0, 5], "optim": [0, 4, 5, 6, 10, 12, 15, 16, 19, 21, 23], "simpl": [0, 5, 15, 16, 18, 19, 20], "make_multiindex_df": [0, 5, 14], "idx_dict": [0, 5], "serv": [0, 5], "label": [0, 5, 15, 16, 19, 21], "transform": [0, 5, 9, 10, 17, 19], "year": [0, 5], "2020": [0, 5, 17, 18], "month": [0, 5], "arang": [0, 5, 20], "multiindex": [0, 5], "shape": [0, 5, 9, 14, 16, 17, 23], "mindex_df_to_mindex_dataarrai": [0, 5, 14], "data_nam": [0, 5], "dim_col": [0, 5], "infer_dim_col": [0, 5], "index_nam": [0, 5], "transit": [0, 5], "represent": [0, 5, 23], "preserv": [0, 5], "mathemat": [0, 5, 19], "thei": [0, 5, 10, 18, 23], "pattern": [0, 5], "_dim_d": [0, 5], "placehold": [0, 5], "dure": [0, 4, 5, 9, 10, 11, 12, 13, 23], "convers": [0, 5], "taken": [0, 5, 23], "origin": [0, 4, 5, 9, 10, 17, 20, 23], "read_flat_fil": [0, 5, 14, 17, 18, 20], "file_dir": [0, 5, 17, 18, 20], "file_regex": [0, 5, 17, 18, 20], "sub_dir": [0, 5, 18], "read_csv_kwarg": [0, 5], "new_column_nam": [0, 5], "strict": [0, 5], "read_from_multiple_fil": [0, 5, 14, 17, 18, 20], "read_engin": [0, 5], "flat": [0, 5], "directori": [0, 5, 7, 18, 20, 23], "subdirectori": [0, 5], "search": [0, 5, 6, 20], "error": [0, 5, 8, 9, 15, 16, 19, 23], "command": [0, 5, 6, 7, 16, 20, 23], "below": [0, 3, 5, 6, 9, 10, 15, 16, 18, 19, 20, 23], "a_raw": [0, 5, 18], "b_raw": [0, 5, 18], "c_raw": [0, 5, 18], "dir": [0, 5], "re": [0, 5, 8, 10, 16, 17, 18, 20, 21], "_raw": [0, 5, 17, 18, 20], "o": [0, 5, 10, 16, 17, 18, 20], "basenam": [0, 5, 17, 18, 20], "filename_as_arg": [0, 5, 17, 18, 20, 23], "datetim": [0, 5, 17, 18, 20, 23], "datetime64": [0, 5, 17, 18, 20, 23], "astyp": [0, 5, 17, 18, 20], "ob": [0, 4, 5, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21], "renam": [0, 5], "z": [0, 4, 5, 17, 18, 20, 23], "subtract": [0, 5, 9], "whose": [0, 4, 5, 9, 22, 23], "65": [0, 5, 17, 18, 20, 21], "col_kwarg": [0, 5, 18, 23], "59": [0, 5, 16, 18, 20], "944790": [0, 5, 18], "82": [0, 5, 18, 20], "061122": [0, 5, 18], "03": [0, 5, 15, 16, 17, 18, 20], "01": [0, 5, 10, 12, 17, 18, 20, 23], "13": [0, 5, 10, 15, 16, 17, 18, 19, 20], "50": [0, 5, 18], "0401": [0, 5], "939555": [0, 5, 18], "063771": [0, 5, 18], "0861": [0, 5], "read_kwarg": [0, 4, 5, 14], "merg": [0, 5, 8, 16, 20], "primari": [0, 5, 6], "those": [0, 3, 5], "end": [0, 5, 15, 19, 20, 23], "netcdf": [0, 4, 5], "via": [0, 5, 7, 10, 12, 18, 23], "row_select_bool": [0, 5, 14], "equal": [0, 4, 5, 10, 15, 23], "open_dataset": [0, 4, 5], "integ": [0, 5, 12, 23], "statement": [0, 5, 23], "were": [0, 4, 5, 9, 20], "to_datafram": [0, 5, 17, 20], "read_from_npi": [0, 5, 14], "npy_fil": [0, 5], "npy_dir": [0, 5], "flatten_xi": [0, 5], "return_xarrai": [0, 5], "npy": [0, 5], "desir": [0, 5, 18, 19], "flatten": [0, 5, 23], "first": [0, 4, 5, 7, 15, 16, 18, 23], "data1": [0, 5, 15], "data2": [0, 5, 15], "shape1": [0, 5], "shape2": [0, 5], "data_x": [0, 5], "data_i": [0, 5], "shape_x": [0, 5], "shape_i": [0, 5], "read_from_pkl_dict": [0, 5, 14], "pkl_file": [0, 5], "pkl_dir": [0, 5], "default_nam": [0, 5], "dim_nam": [0, 5], "pickl": [0, 5], "except": [0, 5, 10, 16, 20, 23], "continu": [0, 5], "remain": [0, 5, 16, 20], "idx0": [0, 5], "idx1": [0, 5], "yyyymmdd": [0, 5], "read_hdf": [0, 5, 14], "select_kwarg": [0, 5], "In": [0, 4, 5, 7, 9, 15, 16, 19, 21], "flag": [0, 5, 10, 15, 16, 19, 20, 21, 23], "relev": [0, 5, 9, 21], "my_data": [0, 5], "_bool_numpy_from_wher": [0, 5], "satisfi": [0, 5], "write_to_hdf": [0, 14], "write_to_netcdf": [0, 14], "w": [0, 4, 18, 20, 21, 23], "to_netcdf_kwarg": 0, "bin_2d": [0, 17], "1d": [0, 6, 10, 17, 22], "unit": [0, 20], "binned_statist": 0, "binned_statistic_2d": 0, "x_bin": 0, "y_bin": 0, "invalid": 0, "explicitli": [0, 4, 9, 10, 11], "influenc": 0, "larger": [0, 10, 15, 16], "date_from_datetim": [0, 14], "dt": 0, "compon": [0, 4, 16], "just": [0, 4, 10, 16, 17, 19], "portion": 0, "dash": [0, 16], "possibl": 0, "achiev": [0, 10, 15, 16, 19, 23], "fast": 0, "datetime_from_float_column": [0, 14], "float_datetim": 0, "epoch": 0, "1950": 0, "time_unit": 0, "dai": 0, "dtype": [0, 17, 18, 23], "18262": 0, "18263": 0, "18264": 0, "2000": 0, "01t12": 0, "02t12": 0, "03t12": 0, "1970": 0, "datetime_from_ymd_col": [0, 14], "hhmmss": 0, "2021": [0, 12, 23], "20": [0, 12, 15, 17, 18, 20, 23], "123456": 0, "234537": 0, "165648": 0, "10t12": 0, "34": [0, 21], "56": [0, 20], "02": [0, 19, 21], "20t23": 0, "45": [0, 15, 16, 20], "37": [0, 16], "30t16": 0, "from_file_start_end_datetime_gpod": [0, 14], "f": [0, 4, 10, 12, 15, 16, 17, 18, 19, 20, 21, 23], "impli": 0, "sequenc": 0, "evenli": [0, 20], "interv": [0, 10, 15, 19], "off": [0, 19, 23], "gpod": 0, "start": [0, 15, 16, 23], "over": [0, 4, 8, 10, 15, 19, 20, 21, 23], "n": [0, 9, 12, 15, 16, 17, 18, 19, 21, 23], "s3a_gpod_sar__sra_a__20191031t233355_20191101t002424_2019112_il_v3": 0, "proc": [0, 20], "11": [0, 16, 17, 18, 19, 20, 21], "2019": 0, "31t23": 0, "33": [0, 20], "55": 0, "000000000": 0, "38": [0, 16, 20, 21], "57": [0, 18, 20], "900000000": 0, "44": [0, 16], "800000000": 0, "49": [0, 15, 20], "700000000": 0, "54": [0, 20], "06": [0, 17, 19], "600000000": 0, "09": [0, 10, 16, 20, 23], "500000000": 0, "01t00": 0, "400000000": 0, "15": [0, 15, 16, 18, 19, 20], "300000000": 0, "14": [0, 15, 16, 17, 18, 19, 20, 21], "18": [0, 19, 20], "200000000": 0, "19": [0, 20], "21": [0, 12, 16, 19, 20], "100000000": 0, "24": [0, 15, 20], "from_file_start_end_datetime_sar": [0, 14], "saral": 0, "encod": 0, "stamp": 0, "saral_c139_0036_20200331_234125_20200401_003143_cs2mss_il_v1": 0, "41": [0, 16], "25": [0, 15, 16, 17, 19, 20, 23], "46": [0, 20], "26": [0, 15, 16, 20], "51": 0, "32": [0, 18, 20], "35": [0, 17, 20], "16": [0, 17, 19, 20], "39": [0, 15, 16, 17, 18, 19, 20, 21, 23], "43": [0, 16], "timer": [0, 14, 23], "measur": [0, 4, 6, 8, 9, 16, 17, 19, 20, 23], "consol": 0, "perf_count": 0, "counter": 0, "high": [0, 4, 6, 10, 11, 13, 20, 23], "second": [0, 4, 15, 16, 17, 18, 19, 20, 21, 23], "sinc": [0, 4, 10, 11, 19, 21, 23], "posit": [0, 17, 20, 23], "functool": 0, "metadata": 0, "docstr": 0, "annot": 0, "easier": 0, "debug": [0, 23], "introspect": 0, "code": [0, 7, 12, 15, 23], "To": [0, 4, 7, 9, 15, 16, 19, 20, 21, 23], "simpli": [0, 16, 19], "you": [0, 8, 15, 19, 21, 22], "want": [0, 4, 8, 10, 16, 19], "def": 0, "my_funct": 0, "localexpertdata": [0, 4, 14], "coords_col": [0, 4, 9, 10, 11, 12, 13, 14, 16, 20], "data_sourc": [0, 4, 14, 16, 20], "set_data_sourc": [0, 14], "localexpertoi": [0, 4, 6, 8, 14, 20], "expert_loc_config": [0, 4, 8, 16, 20], "expertlocsconfig": [0, 4, 8, 16], "data_config": [0, 4, 8, 16, 20], "dataconfig": [0, 4, 8, 16], "model_config": [0, 4, 8, 16, 20], "modelconfig": [0, 4, 8, 10, 16], "pred_loc_config": [0, 4, 8, 16, 20], "predictionlocsconfig": [0, 4, 8, 16], "local_expert_config": [0, 8], "experimentconfig": [0, 4, 8], "interfac": [0, 8], "conduct": [0, 8, 16], "experi": [0, 8, 9, 10, 21], "predict": [0, 8, 9, 10, 11, 12, 13, 15, 21, 22, 23], "underli": [0, 6, 8], "field": [0, 6, 8, 15, 19, 22], "satellit": [0, 4, 6, 8, 9, 12], "gaussian": [0, 6, 8, 10, 12, 13, 15, 17, 20, 22, 23], "gp": [0, 4, 8, 10, 12, 19, 21], "model": [0, 7, 8, 19, 20, 21, 22], "proce": [0, 8], "iter": [0, 4, 8, 10, 11, 23], "train": [0, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 20], "neighbourhood": [0, 8], "store_path": [0, 4, 8, 16, 20, 23], "locexp": [0, 4, 8, 16, 20], "full": [0, 4, 8, 10, 16, 20], "sweep": [0, 8], "dict_of_array_to_t": [0, 14], "concat": [0, 23], "default_dim": 0, "load_param": [0, 4, 14, 20], "previou": [0, 3, 4, 8, 10, 16, 23], "previous_param": 0, "param_nam": [0, 4, 9, 10, 11, 12, 13, 19], "index_adjust": 0, "table_suffix": [0, 4, 8, 20, 22], "param_dict": [0, 4, 19], "plot_locations_and_ob": [0, 14], "image_fil": 0, "exprt_lon_col": 0, "exprt_lat_col": 0, "xrpt_loc_col_func": 0, "vmin": 0, "vmax": 0, "s_exprt_loc": 0, "250": 0, "cbar_label": 0, "observ": [0, 4, 8, 9, 12, 15, 16, 17, 19, 20, 21], "cmap": 0, "ylgnbu_r": 0, "figsiz": [0, 20], "store_everi": [0, 4, 8, 16], "check_config_compat": [0, 4, 8, 20], "skip_valid_checks_on": [0, 4, 8, 23], "optimis": [0, 3, 4, 8, 9, 10, 11, 12, 13, 19, 20], "min_ob": [0, 4, 8], "interpol": [0, 4, 6, 12, 15, 16, 23], "everi": [0, 4, 8, 9, 10, 11, 16, 19, 23], "reduc": [0, 4, 8], "slow": [0, 4, 8, 10], "compat": [0, 4, 8], "oi_config": [0, 4, 8, 16, 20, 23], "skip": [0, 4, 8, 23], "optimise_paramet": [0, 4, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21], "learn": [0, 1, 6, 8, 10, 15, 16, 19, 21], "suffix": [0, 4, 8, 20, 22, 23], "howev": [0, 8, 10, 15, 16, 19], "opt": [0, 7, 8, 12, 13, 17], "sure": [0, 8, 18], "That": [0, 4, 8], "overrid": [0, 8, 9, 11, 12, 13], "delet": [0, 8, 16, 18, 20], "hyperparamet": [0, 4, 6, 8, 9, 10, 12, 16, 19, 22], "smooth": [0, 4, 6, 8, 10, 11, 16, 22], "set_data": [0, 14], "set_expert_loc": [0, 4, 14], "set_model": [0, 4, 14], "oi_model": [0, 4, 16, 20], "init_param": [0, 4, 16, 20], "constraint": [0, 4, 9, 10, 11, 12, 13, 16, 20], "optim_kwarg": [0, 4, 20], "pred_kwarg": [0, 4], "params_to_stor": [0, 4], "replacement_threshold": [0, 4], "replacement_model": [0, 4], "replacement_init_param": [0, 4], "replacement_constraint": [0, 4], "replacement_optim_kwarg": [0, 4], "replacement_pred_kwarg": [0, 4], "set_pred_loc": [0, 14], "get_results_from_h5fil": [0, 8, 14, 16, 20], "results_fil": [0, 8], "global_col_func": [0, 8], "merge_on_expert_loc": [0, 8], "select_t": [0, 8], "add_suffix_to_t": [0, 8], "choos": [0, 8, 10], "onto": [0, 4, 8], "get_project": [0, 14, 20], "plot_gpflow_minimal_exampl": [0, 14], "model_init": 0, "opt_param": 0, "pred_param": 0, "initialis": [0, 4, 9, 10, 15, 16, 19, 21], "made": [0, 4, 7, 9, 20], "minim": [0, 10, 22], "05": [0, 15, 16, 18, 19, 20, 21, 23], "gpflow": [0, 1, 21], "notebook": [0, 15, 19, 21], "getting_start": 0, "basic_usag": 0, "html": 0, "get_paramet": [0, 9, 16, 19, 20], "_var": [0, 10, 15, 16, 19, 20, 21, 23], "y_var": [0, 10, 17], "inherit": [0, 9, 11, 12, 13, 21], "basegprmodel": [0, 4, 9, 10, 11, 12, 13], "plot_hist": [0, 14, 17, 20], "ax": [0, 16, 20], "titl": [0, 20], "histogram": [0, 20], "densiti": 0, "ylabel": 0, "xlabel": 0, "select_bool": 0, "stats_valu": 0, "stats_loc": 0, "drop_nan_inf": 0, "q_vminmax": 0, "raster": 0, "plot_hist_from_results_data": [0, 14], "load_kwarg": [0, 4], "plot_kwarg": [0, 20], "plot_hyper_paramet": [0, 14, 20], "table_nam": [0, 20, 23], "plot_templ": [0, 20], "plots_per_row": [0, 20], "suptitl": [0, 20], "hyper": [0, 9, 11, 12, 13, 19], "param": [0, 9, 20], "qvmin": [0, 20], "qvmax": [0, 20], "99": [0, 20, 22, 23], "plot_pcolormesh": [0, 14, 17, 20], "plot_data": [0, 20], "fig": [0, 17, 20], "scatter": [0, 15, 16, 17, 19, 20, 21], "ocean_onli": 0, "scatter_arg": 0, "plot_pcolormesh_from_results_data": [0, 14, 20], "lat_0": [0, 17, 20, 23], "90": [0, 17, 19, 20, 23], "lon_0": [0, 17, 20, 23], "weighted_values_kwarg": [0, 20], "max_ob": [0, 17, 20], "1000000": [0, 23], "vmin_max": [0, 17, 20], "abs_vminmax": 0, "where_sep": 0, "plot_xi": [0, 14], "y_label": 0, "x_label": 0, "xtick_rot": 0, "plot_xy_from_results_data": [0, 14], "plots_from_config": [0, 14], "plot_config": 0, "num_plots_row_col_s": 0, "smoothingconfig": [0, 14, 22], "l_x": [0, 14, 20, 22], "l_y": [0, 14, 20, 22], "lengthscal": [0, 4, 6, 10, 11, 12, 13, 15, 16, 19, 20, 21, 22, 23], "direct": [0, 22, 23], "maxim": [0, 10, 22], "get_smooth_params_config": [0, 14], "glue_local_predict": [0, 14, 23], "preds_df": [0, 15, 16, 22, 23], "inference_radiu": [0, 15, 16, 20, 22], "glue_local_predictions_1d": [0, 14, 15, 16, 22, 23], "glue_local_predictions_2d": [0, 14, 22, 23], "glue": [0, 15, 16, 22, 23], "overlap": [0, 15, 16, 22, 23], "normalis": [0, 23], "weight": [0, 15, 22, 23], "averag": [0, 10, 15, 22, 23], "deal": [0, 10, 23], "oi": [0, 4, 15, 23], "pred_loc_x": [0, 16, 20, 23], "pred_loc_i": [0, 20, 23], "varianc": [0, 9, 10, 12, 15, 16, 19, 20, 21, 22, 23], "expert_locs_df": [0, 23], "sigma": [0, 12, 19, 23], "standard": [0, 15, 17, 19, 20, 22, 23], "deviat": [0, 17, 19, 22, 23], "consist": [0, 9, 23], "glu": [0, 15, 16, 22, 23], "std": [0, 17, 19, 20, 22, 23], "_std": [0, 23], "norm": [0, 15, 16, 19, 23], "pdf": [0, 23], "normal": [0, 17, 23], "total": [0, 4, 16, 20, 23], "pred_loc_col": [0, 15, 16, 22], "xprt_loc_col": [0, 15, 16, 22], "vars_to_glu": [0, 15, 16, 22], "togeth": [0, 15, 18, 22, 23], "wish": [0, 4, 9, 12, 15, 22, 23], "formula": [0, 22], "place": [0, 10, 17, 21, 22, 23], "mass": [0, 22], "xy": [0, 4, 22], "smooth_hyperparamet": [0, 14, 20, 22], "result_fil": [0, 20, 22], "params_to_smooth": [0, 20, 22], "smooth_config_dict": [0, 20, 22], "xy_dim": [0, 20, 22], "reference_table_suffix": [0, 20, 22], "_smooth": [0, 4, 20, 22], "output_fil": [0, 20, 22], "model_nam": [0, 4, 20, 22], "save_config_fil": [0, 20, 22], "predictionloc": [0, 4, 14], "expert_loc": [0, 4, 10, 14, 15, 16, 20], "properti": [0, 9, 10, 11, 12, 13, 19], "get_dirs_to_search": [0, 14], "walk": 0, "update_attr": [0, 14], "cid": 0, "ease2towgs84": [0, 14, 17, 20, 23], "return_v": [0, 23], "ease2": [0, 20, 23], "wgs84": [0, 20, 23], "longitud": [0, 23], "latitud": [0, 23], "meter": [0, 20, 23], "what": [0, 6, 16, 19, 23], "degre": [0, 23], "2000000": [0, 23], "153": [0, 20, 23], "434948822922": [0, 23], "69": [0, 20, 23], "86894542225777": [0, 23], "ease2towgs84_new": [0, 14, 23], "arg": [0, 9, 23], "wgs84toease2": [0, 14, 17, 20, 23], "decim": [0, 23], "105": [0, 23], "01621": [0, 23], "57422": [0, 23], "5254767": [0, 23], "014984061": [0, 23], "1409604": [0, 23], "1043472202": [0, 23], "wgs84toease2_new": [0, 14, 23], "array_to_datafram": [0, 14, 23], "dim_prefix": [0, 23], "_dim_": [0, 23], "dataframe_to_arrai": [0, 14, 23], "prefix": [0, 23], "_dim_0": [0, 16, 23], "_dim_1": [0, 23], "assign_category_col": [0, 14, 23], "categori": [0, 23], "x_seri": [0, 23], "bin_obs_by_d": [0, 14, 23], "all_dates_in_rang": [0, 23], "date_col_format": [0, 23], "m": [0, 3, 7, 10, 12, 23], "x_min": [0, 23], "x_max": [0, 23], "y_min": [0, 23], "y_max": [0, 23], "n_x": [0, 23], "n_y": [0, 23], "bval": [0, 23], "x_edg": [0, 23], "y_edg": [0, 23], "swap": [0, 23], "due": [0, 10, 23], "transpos": [0, 23], "check_prev_oi_config": [0, 14, 23], "prev_oi_config": [0, 23], "exactli": [0, 23], "compare_datafram": [0, 14, 23], "df1": [0, 18, 23], "df2": [0, 18, 23], "merge_on": [0, 23], "columns_to_compar": [0, 23], "drop_other_col": [0, 23], "outer": [0, 4, 23], "_1": [0, 23], "_2": [0, 23], "col_numpi": [0, 23], "aim": [0, 23], "possibli": [0, 4, 6, 10, 23], "json": [0, 3, 4, 6, 16, 18, 20, 23], "eval": [0, 18, 23], "arg1": [0, 23], "arg2": [0, 23], "nameerror": [0, 23], "again": [0, 19, 20, 23], "cumprod": [0, 23], "unpack": [0, 20, 23], "word": [0, 23], "own": [0, 23], "extern": [0, 20, 23], "last": [0, 4, 23], "120": [0, 23], "convert_lon_lat_str": [0, 14, 23], "minut": [0, 23], "74": [0, 23], "1878": [0, 23], "00313": [0, 23], "140": [0, 23], "1198": [0, 23], "001997": [0, 23], "cprint": [0, 14, 17, 18, 20, 23], "endc": [0, 23], "bcolor": [0, 23], "sep": [0, 18, 23], "color": [0, 15, 16, 19, 21, 23], "stackoverflow": [0, 23], "question": [0, 23], "287871": [0, 23], "text": [0, 19, 20, 23], "termin": [0, 23], "header": [0, 23], "okblu": [0, 17, 23], "okcyan": [0, 17, 23], "okgreen": [0, 23], "bold": [0, 17, 18, 23], "underlin": [0, 23], "font": [0, 23], "cane": [0, 23], "chain": [0, 23], "en": [0, 23], "wikipedia": [0, 23], "org": [0, 23], "wiki": [0, 23], "ansi_escape_cod": [0, 23], "bit_and_4": [0, 23], "bit": [0, 19, 23], "dataframe_to_2d_arrai": [0, 14, 23], "tol": [0, 10, 11, 12, 13, 23], "1e": [0, 10, 11, 13, 16, 20, 23], "fill_val": [0, 23], "came": [0, 23], "order": [0, 4, 7, 9, 10, 18, 20, 23], "toler": [0, 23], "fill": [0, 23], "miss": [0, 18, 20, 23], "round": [0, 23], "neg": [0, 10, 12, 23], "left": [0, 19, 23], "smallest": [0, 23], "step": [0, 3, 4, 10, 23], "meant": [0, 23], "revers": [0, 7, 23], "put": [0, 15, 16, 23], "idx_col": [0, 23], "dropna": [0, 17, 18, 20, 23], "gap": [0, 23], "dim1": [0, 23], "dim2": [0, 23], "arr": [0, 23], "dict_of_array_to_dict_of_datafram": [0, 14, 23], "array_dict": [0, 23], "diff_dist": [0, 14, 23], "p": [0, 9, 19, 23], "k": [0, 12, 15, 16, 19, 21, 23], "default_v": [0, 23], "expand_dict_by_v": [0, 14, 23], "expand_kei": [0, 23], "get_col_valu": [0, 14, 23], "return_numpi": [0, 23], "th": [0, 10, 23], "col_valu": [0, 23], "get_config_from_sysargv": [0, 14, 23], "argv_num": [0, 23], "sy": [0, 23], "argv": [0, 23], "occur": [0, 16, 20, 23], "benefit": [0, 10, 23], "refactor": [0, 23], "argpars": [0, 23], "manual": [0, 23], "pars": [0, 23], "get_git_inform": [0, 14, 23], "state": [0, 10, 23], "repositori": [0, 7, 20, 23], "url": [0, 17, 23], "hash": [0, 23], "line": [0, 6, 20, 23], "tool": [0, 23], "instal": [0, 6, 23], "get_previous_oi_config": [0, 14, 23], "idx": [0, 23], "largest": [0, 23], "id": [0, 21, 23], "increment": [0, 4, 23], "done": [0, 3, 4, 16, 23], "get_weighted_valu": [0, 14, 20, 23], "ref_col": [0, 20, 23], "dist_to_col": [0, 20, 23], "weight_funct": [0, 20, 23], "drop_weight_col": [0, 23], "weight_kwarg": [0, 23], "distanc": [0, 15, 20, 23], "implement": [0, 1, 4, 10, 12, 16, 23], "euclidean": [0, 23], "align": [0, 15, 19, 23], "exp": [0, 17, 19, 23], "squar": [0, 15, 16, 19, 23], "scale": [0, 9, 10, 11, 12, 13, 16, 17, 20, 23], "l": [0, 4, 10, 12, 19, 21, 23], "fillna": [0, 23], "value1": [0, 23], "40": [0, 23], "value2": [0, 23], "100": [0, 10, 15, 16, 17, 19, 20, 21, 23], "200": [0, 17, 18, 20, 23], "300": [0, 17, 18, 20, 23], "400": [0, 17, 18, 20, 23], "weighted_df": [0, 23], "deprac": [0, 23], "grid_2d_flatten": [0, 14, 20, 23], "step_siz": [0, 20, 23], "num_step": [0, 23], "adjac": [0, 23], "cell": [0, 20, 23], "unspecifi": [0, 4, 23], "least": [0, 23], "guess_track_num": [0, 14, 23], "thresh": [0, 23], "start_track": [0, 23], "inverse_sigmoid": [0, 14, 23], "low": [0, 4, 10, 11, 13, 20, 23], "inverse_softplu": [0, 14, 23], "shift": [0, 23], "json_load": [0, 14, 23], "file_path": [0, 23], "nest": [0, 23], "liter": [0, 4, 9, 23], "nested_dict_literal_ev": [0, 14, 23], "key1": [0, 23], "key2": [0, 23], "key3": [0, 23], "key4": [0, 23], "key5": [0, 23], "key6": [0, 23], "value3": [0, 23], "json_serializ": [0, 14, 20, 23], "max_len_df": [0, 23], "dump": [0, 23], "recov": [0, 6, 19, 23], "recurs": [0, 23], "serializ": [0, 23], "cast": [0, 23], "log_lin": [0, 14, 23], "log": [0, 9, 10, 11, 12, 13, 15, 16, 19, 23], "info": [0, 16, 23], "critic": [0, 15, 16, 19, 20, 21, 23], "getattr": [0, 23], "exact": [0, 9, 10, 11, 12, 23], "to_arrai": [0, 14, 23], "sens": [0, 23], "up": [0, 4, 10, 16, 18, 19, 23], "alot": [0, 23], "intermedi": [0, 23], "nxm": [0, 23], "move_to_arch": [0, 14, 23], "top_dir": [0, 23], "file_nam": [0, 23], "archive_sub_dir": [0, 23], "archiv": [0, 23], "move": [0, 23], "top": [0, 15, 17, 20, 23], "anyth": [0, 23], "destin": [0, 23], "overwritten": [0, 23], "file1": [0, 23], "txt": [0, 7, 20, 23], "file2": [0, 23], "_backup": [0, 23], "old": [0, 23], "valueerror": [0, 23], "nll": [0, 14, 23], "mu": [0, 23], "sig": [0, 23], "return_tot": [0, 23], "not_nan": [0, 14, 23], "pandas_to_dict": [0, 14, 23], "john": [0, 23], "jane": [0, 23], "ag": [0, 23], "iloc": [0, 23], "pip_freeze_to_datafram": [0, 14, 23], "pretty_print_class": [0, 14, 23], "without": [0, 23], "lead": [0, 10, 23], "__main__": [0, 23], "invok": [0, 23], "__str__": [0, 23], "unwant": [0, 23], "charact": [0, 23], "myclass": [0, 23], "rmse": [0, 14, 23], "sigmoid": [0, 14, 23], "softplu": [0, 14, 23], "sparse_true_arrai": [0, 14, 23], "grid_space_offset": [0, 23], "throughout": [0, 23], "elsewher": [0, 23], "offset": [0, 23], "everywher": [0, 23], "fraction": [0, 23], "roughli": [0, 23], "stats_on_v": [0, 14, 17, 20, 23], "q": [0, 20, 23], "defualt": [0, 23], "quantil": [0, 23], "95": [0, 20, 23], "num_not_nan": [0, 17, 20, 23], "num_inf": [0, 17, 20, 23], "infinit": [0, 23], "skew": [0, 17, 20, 23], "kurtosi": [0, 17, 20, 23], "qx": [0, 23], "xth": [0, 23], "date_format": [0, 23], "yield": [0, 15, 23], "next": [0, 15, 16, 23], "track_num_for_d": [0, 14, 23], "adapt": 0, "st": 0, "blockdiagmat": [0, 14], "get_diag": [0, 14], "inv": [0, 14], "inv_diag": [0, 14], "logdet": [0, 14], "matmul": [0, 14], "matmul_sqrt": [0, 14], "matmul_sqrt_transpos": [0, 14], "solv": [0, 14, 15], "sqrt_dim": [0, 14], "trace_kix": [0, 14], "matrix": [0, 10, 12, 19], "self": [0, 9, 10], "tr": 0, "diagmat": [0, 14], "gpr_kron": [0, 14], "kernel_list": 0, "gpmodel": 0, "internaldatatraininglossmixin": 0, "elbo": [0, 10, 14], "maximum_log_likelihood_object": [0, 14], "likelihood": [0, 9, 10, 11, 12, 13, 15, 16, 17, 21], "estim": [0, 10, 12], "margin": [0, 9, 10, 11, 12, 13, 19], "gpr": [0, 6, 9, 10, 11, 12, 15, 21], "lower": [0, 4, 10], "bound": [0, 4, 19], "spars": [0, 6, 10], "variat": [0, 6, 9, 10, 11, 12, 13], "predict_f": [0, 14], "xnew": 0, "full_cov": [0, 10, 11, 13], "full_output_cov": 0, "posterior": [0, 10, 19], "latent": [0, 17], "x_i": [0, 19], "f_i": 0, "begin": [0, 15, 19], "theta": [0, 19], "sim": [0, 15, 19], "mathcal": [0, 15, 19], "covari": [0, 10, 12, 19], "independ": 0, "lowrankmat": [0, 14], "There": [0, 16], "sqrt": [0, 12, 15, 16, 17, 19, 21], "right": [0, 19], "multipli": [0, 10], "lowrankmatneg": [0, 14], "rank1mat": [0, 14], "v": [0, 19], "rank1matneg": [0, 14], "kron": [0, 14], "kron_two": [0, 14], "kroneck": 0, "product": [0, 10], "tensorfow": 0, "tensor": [0, 10], "make_kuf": [0, 14], "make_kuf_np": [0, 14], "make_kuu": [0, 14], "kern": 0, "kuu": 0, "matric": 0, "make_kv": [0, 14], "vector": [0, 12], "stack": 0, "make_kvs_np": [0, 14], "a_list": 0, "make_kvs_two": [0, 14], "kronec": 0, "make_kvs_two_np": [0, 14], "get_config_path": [0, 14], "get_data_path": [0, 14, 17, 18, 20], "get_parent_path": [0, 14, 16, 20], "get_path": [0, 14], "gpsat": [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23], "pure": 1, "scikit": [1, 19, 21], "gpytorch": 1, "modul": [3, 6, 11, 13, 14, 15, 19, 22], "most": [3, 21], "reli": 3, "screen": 3, "purpl": 3, "read_and_stor": [3, 14], "abov": [3, 4, 8, 10, 16, 18, 19], "plot_observ": 3, "outlier": 3, "bin_data": [3, 5, 14, 17], "local_expert_oi": 3, "postprocess": [3, 6, 14, 15, 16, 20], "don": [3, 20], "abc_binned_example_smooth": 3, "plot_from_result": 3, "api": [4, 15, 19, 21], "predcit": 4, "addition": [4, 9, 11, 12, 13], "subclass": [4, 11], "dataclass_json": 4, "u": [4, 9, 15], "keep": [4, 9, 16, 20], "track": [4, 6, 17], "purpos": [4, 9, 16, 20], "typic": [4, 16, 19], "workflow": [4, 15, 21], "instanti": 4, "backward": 4, "config_dataclass": [4, 16], "local_expert": [4, 8, 14, 16, 20], "toi": [4, 17], "random": [4, 10, 15, 16, 17, 19, 20, 21], "randn": [4, 15, 16, 19, 21], "xpert_loc": 4, "pred_loc": [4, 15, 20], "linspac": [4, 15, 16, 17, 19, 21], "sklearngprmodel": [4, 13, 15, 16, 19, 21], "xpert_config": 4, "pred_config": 4, "from_datafram": [4, 16, 18, 20], "run_config": 4, "runconfig": 4, "comment": 4, "experiment_config": 4, "config_json": 4, "to_json": 4, "example_config": 4, "json_object": 4, "from_dict": 4, "expert_locs_config": 4, "prediction_locs_config": 4, "to_dict": 4, "todo": [4, 10, 17, 18, 20, 23], "tabular": 4, "accomod": [4, 16], "multioutput": 4, "obtain": 4, "impos": [4, 9, 11, 12, 13, 16], "explain": [4, 15], "xyt": 4, "too": [4, 10, 20], "natur": [4, 10, 15], "itself": [4, 21], "tandem": 4, "our": [4, 15, 16, 19], "criterion": [4, 10], "specififi": 4, "exp_loc_t": 4, "let": [4, 15, 16, 19, 21], "shorthand": 4, "exp_loc": 4, "Then": 4, "loop": [4, 9, 16], "gpflowgprmodel": [4, 10, 19, 20, 21], "gpflowsgprmodel": [4, 10], "gpflowsvgpmodel": [4, 10], "gpflowvffmodel": [4, 10], "gpflowasvgpmodel": 4, "region": [4, 10, 15, 16, 19], "One": 4, "some": [4, 10, 15, 16, 17, 19, 20], "path_to_model": 4, "custommodel": 4, "__init__": [4, 8, 9, 10, 15, 16, 17, 19, 20, 21], "inner": 4, "multidimension": 4, "upper": 4, "intend": [4, 13, 15], "attach": 4, "version": [4, 7, 19], "might": [4, 16, 18], "lengthscale_smooth": 4, "quit": [4, 10, 15], "heavi": 4, "loc": [4, 17, 18, 20], "extra": [4, 10], "constant": [4, 19], "doubl": [4, 16], "redund": 4, "sort": [4, 18], "sort_valu": 4, "from_sourc": 4, "df_file": 4, "max_dist": [4, 16, 20], "prediction_loc": [4, 14, 16], "dataload": [4, 6, 14, 17, 20], "factori": [4, 20], "four": [4, 8, 16], "fulli": 4, "five": 4, "descript": 4, "chang": [4, 7, 19, 20, 21], "particular": [4, 16], "run_kwarg": 4, "util": [5, 6, 14, 17, 18, 20, 21], "librari": 6, "spatio": 6, "tempor": 6, "Its": 6, "goal": [6, 16, 19], "sea": [6, 12], "surfac": 6, "height": 6, "highlight": 6, "characterist": 6, "million": 6, "signal": 6, "noisi": [6, 10, 15, 16, 19, 21], "har": 6, "power": [6, 19], "vast": 6, "amount": [6, 17], "would": [6, 20], "infeas": 6, "moreov": 6, "captur": 6, "abl": [6, 10], "gpu": [6, 9, 10, 13], "acceler": 6, "faster": [6, 12, 18], "moder": 6, "per": [6, 10], "regress": [6, 10, 12, 13], "part": 6, "studi": 6, "ii": 6, "inlin": 6, "tutori": [6, 10, 15, 16], "dataclass": [6, 8], "packag": [6, 7, 10, 11, 14, 21, 23], "page": 6, "linux": 7, "mac": 7, "window": 7, "come": [7, 19], "soon": 7, "pip": [7, 20], "conda": 7, "simpler": [7, 13], "clone": 7, "cpomucl": [7, 20], "ssh": 7, "virtual": 7, "activ": 7, "cd": 7, "venv": 7, "edit": [7, 20], "reflect": [7, 15, 16, 19], "immedi": 7, "develop": [7, 11], "homebrew": 7, "brew": 7, "export": 7, "perman": 7, "zshrc": 7, "bashrc": 7, "appl": 7, "silicon": 7, "hdf5_dir": 7, "intel": 7, "m1": 7, "chip": 7, "appropri": [7, 15, 16, 19, 20, 21], "tensorflow": [7, 10, 15, 16, 19, 20, 21], "metal": 7, "system_version_compat": 7, "maco": 7, "incompat": 7, "numba": 7, "cartopi": [7, 17], "resolv": 7, "perhap": 7, "seem": 7, "conflict": 7, "solut": 7, "matplotlib": [7, 15, 16, 17, 19, 20, 21], "base_model": 9, "coord": [9, 10, 11, 12, 13, 15, 16, 19, 21], "coords_scal": [9, 10, 11, 12, 13, 20], "obs_scal": [9, 10, 11, 12, 13], "obs_mean": [9, 10, 11, 12, 13], "abc": 9, "enforc": 9, "across": 9, "notat": 9, "denot": 9, "datapoint": 9, "get_objective_function_valu": [9, 10, 11, 12, 13, 16, 19], "getter": [9, 19], "setter": [9, 10, 19], "get_": [9, 11, 12, 13, 19], "set_": [9, 11, 12, 13, 19], "get_a": [9, 11, 12, 13], "set_a": [9, 11, 12, 13], "get_b": [9, 11, 12, 13], "set_b": [9, 11, 12, 13], "_constraint": [9, 11, 12, 13], "constrain": 9, "de": 9, "rescal": [9, 10], "correspod": 9, "three": 9, "gpu_nam": 9, "availab": 9, "cpu_nam": 9, "processor": 9, "machin": [9, 12, 19, 21], "overridden": [9, 11], "return_dict": 9, "set_paramet": [9, 20], "set_parameter_constraint": 9, "constraints_dict": [9, 12], "calibr": 9, "kernel": [9, 10, 11, 12, 13, 15, 16, 19, 20, 21], "zero": [9, 19], "enhanc": 10, "gpflow_model": [10, 19, 21], "matern32": [10, 12], "kernel_kwarg": [10, 11, 13, 20], "mean_funct": [10, 11], "mean_func_kwarg": [10, 11], "noise_vari": [10, 11, 20, 21], "complet": [10, 19], "cosin": [10, 19], "exponenti": 10, "matern12": 10, "matern52": 10, "rationalquadrat": 10, "rbf": [10, 15, 16, 19, 21], "equival": [10, 19], "squaredexponenti": 10, "prior": [10, 12, 19], "unnecessari": 10, "uncertainti": [10, 19], "vanilla": 10, "get_kernel_vari": [10, 11, 12, 13, 19], "get_lengthscal": [10, 11, 12, 13, 15, 19], "get_likelihood_vari": [10, 11, 12, 13, 19], "loss": [10, 15, 19], "max_it": 10, "fixed_param": [10, 20, 21], "opt_kwarg": 10, "bfg": [10, 12], "inter": 10, "permit": 10, "until": 10, "converg": 10, "reach": 10, "kernel_vari": [10, 11, 12, 13, 16, 19, 20], "likelihood_vari": [10, 11, 12, 13, 15, 16, 19, 20, 21], "success": [10, 19], "apply_scal": [10, 11, 12, 13], "raw": 10, "untransform": 10, "_cov": 10, "y_cov": 10, "set_kernel_vari": [10, 11, 12, 13, 19], "set_kernel_variance_constraint": [10, 11, 12, 13], "move_within_tol": [10, 11, 12, 13], "08": [10, 11, 13, 15, 16, 19, 20, 21], "scale_magnitud": 10, "hyperparam": 10, "set_lengthscal": [10, 11, 12, 13], "set_lengthscales_constraint": [10, 11, 12, 13, 20], "set_likelihood_vari": [10, 11, 12, 13, 19], "set_likelihood_variance_constraint": [10, 11, 12, 20], "update_obs_data": 10, "num_inducing_point": 10, "500": [10, 17, 20], "beyond": 10, "capac": 10, "introduc": 10, "pseudo": [10, 16], "induc": 10, "summaris": 10, "smaller": [10, 15], "1e5": 10, "deterior": 10, "fewer": 10, "necessari": 10, "tune": 10, "strike": 10, "good": 10, "balanc": 10, "accuraci": 10, "nm": 10, "sever": [10, 17], "techniqu": 10, "sampl": [10, 17, 21], "titsia": 10, "michali": 10, "artifici": 10, "intellig": 10, "pmlr": 10, "2009": 10, "get_inducing_point": 10, "train_inducing_point": 10, "hyperparmet": 10, "improv": [10, 15, 16, 19], "slower": 10, "set_inducing_point": 10, "inducing_point": 10, "minibatch_s": 10, "likelihood_kwarg": 10, "svgp": 10, "h": 10, "even": [10, 16, 21], "sgpr": 10, "stochast": 10, "mini": 10, "gradient": [10, 12], "parameteris": 10, "choleski": 10, "factor": [10, 12], "oppos": 10, "former": [10, 11, 19], "latter": [10, 11, 19], "bm": 10, "minibatch": 10, "intens": 10, "leav": 10, "cross": 10, "hensman": 10, "jame": 10, "nicolo": 10, "fusi": 10, "neil": 10, "lawrenc": [10, 12], "big": 10, "arxiv": 10, "preprint": 10, "1309": 10, "6835": 10, "2013": 10, "necessarili": 10, "studentt": 10, "algorithm": [10, 12], "becom": 10, "vgp": 10, "increas": [10, 19], "get_inducing_chol": 10, "covariac": 10, "get_inducing_mean": 10, "natural_gradi": 10, "gamma": 10, "learning_r": 10, "persist": 10, "check_everi": 10, "early_stop": 10, "adam": [10, 11], "investig": 10, "best": [10, 16], "empir": 10, "shown": 10, "better": [10, 15, 16, 19], "inducing_mean": 10, "inducing_chol": 10, "rate": 10, "discuss": 10, "earli": 10, "stop": 10, "displai": [10, 18], "tradit": 10, "devis": 10, "approxim": [10, 12], "set_inducing_chol": 10, "q_sqrt": 10, "set_inducing_mean": 10, "q_mu": 10, "vff_model": 10, "num_inducing_featur": 10, "domain_s": 10, "vff": [10, 14], "fourier": 10, "featur": 10, "prime": 10, "interdomain": 10, "domain": [10, 15], "physic": 10, "frequenc": 10, "ow": 10, "orthogon": 10, "sinusoid": 10, "basi": [10, 19], "17": [10, 20, 21], "poor": [10, 21], "thu": [10, 16, 19], "usual": 10, "seen": 10, "problem": [10, 13, 16], "3d": 10, "likewis": [10, 15], "cost": 10, "restrict": 10, "finit": 10, "affect": 10, "As": [10, 15, 16, 21], "rule": [10, 19], "thumb": 10, "enough": 10, "subsum": 10, "overli": 10, "nicola": 10, "durrand": 10, "arno": 10, "solin": 10, "j": [10, 19], "mach": 10, "2017": 10, "unscal": [10, 20], "finint": 10, "cuboid": 10, "cubic": 10, "still": 11, "gpytorch_model": 11, "exactgpr": 11, "train_x": 11, "train_i": 11, "exactgp": 11, "forward": 11, "although": [11, 19], "recip": 11, "afterward": 11, "care": 11, "regist": [11, 20], "hook": 11, "silent": 11, "gpytorchgprmodel": 11, "maternkernel": 11, "gaussianlikelihood": 11, "get_smooth": 11, "matern": [11, 12, 13], "set_smooth": 11, "gpytorchkissgpmodel": 11, "set_lengthscale_constraint": 11, "gregori": 12, "william": 12, "isobel": 12, "michel": 12, "tsamado": 12, "bayesian": [12, 19], "toward": 12, "daili": 12, "pan": 12, "arctic": 12, "ic": 12, "freeboard": 12, "cryosat": 12, "sentinel": 12, "cryospher": 12, "pure_python_gpr": 12, "ell": [12, 19], "sf2": 12, "sn2": 12, "approx": 12, "returnprior": 12, "radar": 12, "correl": 12, "nois": [12, 19], "nystr\u00f6m": 12, "sfs2": 12, "kx": 12, "nystroem": 12, "seed": [12, 15, 16, 17, 19, 21], "seeger": 12, "2001": 12, "produc": 12, "rank": 12, "find": [12, 15, 19, 20, 21], "invers": 12, "woodburi": 12, "ident": [12, 21], "purepythongpr": 12, "length_scal": 12, "kernel_var": 12, "likeli_var": 12, "hold": [12, 18], "sgpkernel": 12, "smlii": 12, "grad": 12, "get_loglikelihood": 12, "get_transform_func": 12, "opt_method": 12, "jac": 12, "dk": 12, "smlii_mod": 12, "use_log": 12, "minimis": 12, "guess": 12, "nlz": 12, "dnlz": 12, "fairli": 13, "lightweight": 13, "No": [13, 16, 20], "sklearn_model": [13, 15, 19, 21], "mean_valu": 13, "param_bound": 13, "submodul": 14, "dataprepp": [14, 17, 20], "datetime_util": 14, "decor": [14, 21, 23], "plot_util": [14, 17, 20], "content": [14, 20, 23], "look": [15, 16, 17, 18, 19], "situat": 15, "commonli": 15, "encount": 15, "geoscienc": 15, "strategi": 15, "adopt": 15, "autom": [15, 16], "carri": 15, "whole": 15, "sake": [15, 16], "hard": 15, "pyplot": [15, 16, 17, 19, 20, 21], "plt": [15, 16, 17, 19, 20, 21], "356855": 15, "core": [15, 16, 19, 20, 21], "platform": [15, 16, 19, 20, 21], "cpu_feature_guard": [15, 16, 19, 20, 21], "cc": [15, 16, 19, 20, 21], "182": [15, 16, 19, 20, 21], "binari": [15, 16, 19, 20, 21], "cpu": [15, 16, 19, 20, 21], "sse4": [15, 16, 19], "rebuild": [15, 16, 19, 20, 21], "compil": [15, 16, 19, 20, 21], "tag": [15, 19], "sin": [15, 16, 17], "epsilon": [15, 16, 19, 21], "quad": [15, 19], "noise_std": [15, 16, 19, 21], "x_grid": [15, 16, 19, 21], "uniform": [15, 16, 19, 21], "f_truth": [15, 16, 19, 21], "ground": [15, 16, 19, 21], "truth": [15, 16, 19, 21], "plot": [15, 16, 19, 21], "zorder": [15, 16, 19, 21], "c3": [15, 16, 19, 21], "alpha": [15, 16, 17, 19, 21], "legend": [15, 16, 19, 21], "lt": [15, 16, 19, 21], "0x7f980871fee0": 15, "gt": [15, 16, 19, 20, 21], "tricki": 15, "curv": 15, "shorter": [15, 21], "longer": 15, "sklearn": [15, 21], "_": [15, 16, 18, 19, 21], "pred_dict": [15, 19], "f_mean": [15, 16, 19], "f_var": [15, 16, 19], "f_std": [15, 16, 19], "c0": [15, 19, 21], "fill_between": [15, 16, 17, 19, 21], "96": [15, 16, 19, 21], "067": [15, 20], "122": 15, "002": [15, 16, 19], "0x7f98264fcb50": 15, "spuriou": 15, "fluctuat": 15, "4f": [15, 16, 19], "0364": 15, "short": 15, "rapid": 15, "logpdf": [15, 16, 19], "0005": [15, 16], "3388": 15, "idea": [15, 17], "simplic": 15, "gp1": 15, "gp2": 15, "deliber": 15, "later": 15, "zip": [15, 16, 17], "x_test_1": 15, "x_test_2": 15, "convent": 15, "associ": 15, "mid": 15, "boundari": [15, 16], "xpert_loc_1": [15, 16], "xpert_loc_2": [15, 16], "training_radiu": [15, 16, 20], "now": [15, 16, 19, 20, 21], "pred_dict_1": 15, "f_mean_1": 15, "f_var_1": 15, "f_std_1": 15, "pred_dict_2": 15, "f_mean_2": 15, "f_var_2": 15, "f_std_2": 15, "031": [15, 16], "001": [15, 16, 17, 20], "017": [15, 18, 20], "041": [15, 16, 17], "lai": 15, "81": [15, 20], "c1": [15, 21], "0x7ff2f1e6b6d0": 15, "0321": 15, "1632": 15, "smoothli": 15, "gate": 15, "record": 15, "29": [15, 20, 21], "results_df": 15, "xprt_loc": [15, 16], "tail": 15, "100000": [15, 16], "501423": [15, 16], "003268": [15, 16], "105051": [15, 16], "080115": [15, 16], "000920": [15, 16], "110101": [15, 16], "310646": [15, 16], "000572": [15, 16], "115152": [15, 16], "635114": [15, 16], "000698": [15, 16], "120202": [15, 16], "866515": [15, 16], "000760": [15, 16], "115": 15, "579798": 15, "985532": 15, "000255": 15, "116": [15, 20], "584848": 15, "988731": 15, "000312": 15, "117": 15, "589899": 15, "991786": 15, "000402": 15, "118": 15, "594949": 15, "994677": 15, "000536": 15, "119": 15, "600000": [15, 20], "997378": 15, "000728": 15, "glued_pr": [15, 16], "x_test": [15, 16], "0x7f9809459e20": 15, "slightli": [15, 16], "score": 15, "5734": [15, 16], "stationari": 16, "procedur": 16, "involv": [16, 18], "cumbersom": 16, "761071": 16, "omp": 16, "276": 16, "omp_set_nest": 16, "routin": 16, "pleas": 16, "omp_set_max_active_level": 16, "0x7fc12fba61f0": 16, "break": [16, 21], "down": 16, "suffici": 16, "xpert_locs_df": 16, "advanc": 16, "conveni": 16, "data_df": 16, "374407": 16, "395253": 16, "457595": 16, "862078": 16, "401382": 16, "628628": 16, "372442": 16, "364094": 16, "311827": 16, "009149": 16, "local_select_instruct": 16, "programmat": 16, "data_1": 16, "ref_point": 16, "data_2": 16, "local_data": 16, "union": 16, "intersect": 16, "member": 16, "With": 16, "circular": 16, "around": [16, 19], "prediction_locs_df": 16, "1d_tutorial_exampl": 16, "run_detail": [16, 20], "_max_dist_bool": 16, "_from_datafram": 16, "_update_global_data": 16, "62": 16, "037": 16, "066": 16, "0321035488284147": 16, "6388633229513591": 16, "0025000000000000005": 16, "020": 16, "16317534178011256": 16, "3296724457270036": 16, "pred": [16, 20], "058": 16, "dict_kei": 16, "devic": [16, 21], "xval": 16, "yval": 16, "errorbar": 16, "xerr": 16, "fmt": 16, "elinewidth": 16, "barsabov": 16, "capsiz": 16, "vline": 16, "linestyl": 16, "gca": 16, "set_ylim": 16, "0x7fc1422b7070": 16, "illustr": 16, "blue": [16, 19], "circl": 16, "horizont": 16, "bar": 16, "assess": [16, 19], "happen": 16, "023": [16, 20], "172": 16, "03354575999266631": 16, "536162773874243": 16, "039": 16, "059": 16, "0887015158885798": 16, "19701393313984264": 16, "054": 16, "1793349088554155": 16, "29543246711988835": 16, "021": [16, 20], "2911974656858733": 16, "23445334006310356": 16, "582": 16, "27": 16, "c4": 16, "0x7fc142227b50": 16, "much": [16, 21], "0003": 16, "7179": 16, "prevent": 16, "overfit": 16, "yet": [16, 19], "interest": 16, "50_000": [17, 20], "4_500_000": 17, "180": [17, 20], "60": [17, 20], "north": [17, 20], "south": [17, 20], "home": [17, 18, 20, 21], "runner": [17, 18, 20], "923": 17, "sov": 17, "269": 17, "1174848": [17, 20], "7965": [17, 20], "128416": [17, 20], "7093": [17, 20], "186566": [17, 20], "912819": [17, 20], "890": [17, 20], "268297": [17, 20], "q0": [17, 20], "010": [17, 19, 20], "3732": [17, 20], "050": [17, 18, 20], "1387": [17, 20], "0485": [17, 20], "0322": [17, 20], "0767": [17, 20], "1101": [17, 20], "1394": [17, 20], "600": [17, 20], "1686": [17, 20], "700": [17, 20], "2011": [17, 20], "800": [17, 20], "2424": [17, 20], "900": [17, 20], "3067": [17, 20], "950": [17, 20], "3632": [17, 20], "990": [17, 20], "4775": [17, 20], "bin_d": [17, 20], "523": 17, "unless": 17, "bin_df": [17, 20], "mid_t": 17, "500_000": [17, 20], "show": [17, 18, 20], "003": 17, "pcolormesh": [17, 20], "hist": [17, 20], "085": 17, "223": [17, 20], "hostedtoolcach": 17, "x64": 17, "lib": [17, 21], "site": [17, 21], "241": 17, "downloadwarn": 17, "download": 17, "naturalearth": 17, "s3": 17, "amazonaw": 17, "50m_physic": 17, "ne_50m_land": 17, "ne_50m_coastlin": 17, "ne_50m_lak": 17, "demonstr": [17, 18], "10001": 17, "tf": [17, 20, 21], "set_se": 17, "pi": 17, "determinist": 17, "ones": 17, "f1": 17, "f2": 17, "co": [17, 19, 21], "atm": 17, "dummi": 17, "df_dummi": 17, "bdf": 17, "var": 17, "522": [17, 20], "y_mean": 17, "y_std": 17, "parq_tmp": [17, 18], "tmp": [17, 18], "to_parquet": [17, 18], "fastparquet": [17, 18], "50000": [17, 20], "act": 17, "bd": 17, "423": 17, "249": 17, "061": 17, "692": 17, "394": [17, 18], "view": 17, "2475000": 17, "1125000": 17, "181500": 17, "2225000": 17, "1525000": 17, "198300": 17, "1425000": 17, "231700": 17, "2175000": 17, "1625000": 17, "005200": 17, "1575000": 17, "052156": 17, "float64": [17, 18], "087376": 17, "999": 17, "646315": 17, "set_opt": 18, "max_column": 18, "225": 18, "226": 18, "190860": 18, "647048": 18, "948838": 18, "0330": 18, "224372": 18, "679991": 18, "36": [18, 20], "667280": 18, "1057": 18, "195": [18, 21], "315": 18, "316": 18, "tab": 18, "seper": 18, "tsv_file": 18, "to_csv": 18, "keep_default_na": 18, "assert_frame_equ": 18, "310": 18, "295540": 18, "0599": 18, "354648": 18, "0139": 18, "pyarrow": 18, "auto": 18, "080": [18, 20], "hdf5_tmp": 18, "hdf5_tabl": 18, "data_column": 18, "searchabl": 18, "401": 18, "tmp_": 18, "set_index": 18, "netcdf_tmp": 18, "to_netcdf": 18, "comeback": 18, "sort_index": 18, "184": 18, "220": 18, "accomplish": 18, "doesn": 18, "assert_array_equ": 18, "assert": [18, 20], "281": 18, "282": 18, "501": [18, 20], "345": 18, "346": 18, "where_dict": 18, "thise": 18, "152": 18, "170": 18, "timestamp": 18, "max_tim": 18, "055": 18, "049": 18, "df0": 18, "395": 18, "456": 18, "279": [18, 20], "280": [18, 20], "404": 18, "431": [18, 20], "393": 18, "420": 18, "negat": 18, "invert": 18, "flip": 18, "vice": 18, "versa": 18, "exclud": [18, 20], "df3": 18, "similar": 18, "df4": 18, "df5": 18, "392": 18, "397": 18, "415": 18, "406": 18, "417": 18, "389": 18, "455": 18, "shall": 18, "umn": 18, "_func": 18, "tion": 18, "z_po": 18, "403": 18, "453": 18, "396": 18, "clean": 18, "go": 19, "familiar": 19, "326820": 19, "x_1": 19, "ldot": 19, "x_n": 19, "randomli": 19, "0x7feb6cebafa0": 19, "intuit": 19, "understood": 19, "mathbb": 19, "rightarrow": 19, "multivari": 19, "k_": 19, "xx": 19, "importantli": 19, "ij": 19, "x_j": 19, "foral": 19, "characteris": 19, "radial": 19, "frac": 19, "040": 19, "lingo": 19, "equip": 19, "substitut": 19, "kv": 19, "suppos": 19, "1f": 19, "saw": 19, "describ": 19, "probabl": 19, "precis": 19, "correct": 19, "0025": 19, "lv": 19, "048": 19, "bay": 19, "belief": 19, "underbrac": 19, "propto": 19, "term": 19, "give": 19, "n_": 19, "reshap": 19, "0x7feb5a131d00": 19, "shade": 19, "credibl": 19, "believ": 19, "li": 19, "sum_": 19, "f_": 19, "0026": 19, "4578": 19, "certain": [19, 20], "perfer": 19, "maximis": 19, "counterpart": 19, "6180": 19, "opt_success": 19, "item": 19, "026": [19, 20], "5648": 19, "5168": 19, "4700": 19, "0x7feb4845bf40": 19, "tighter": 19, "littl": 19, "0037": 19, "8717": 19, "googl": 20, "in_colab": 20, "subprocess": 20, "work_dir": 20, "workspac": 20, "chdir": 20, "split": 20, "capture_output": 20, "stdout": 20, "repo_dir": 20, "join": 20, "upgrad": 20, "new_req": 20, "readlin": 20, "els": 20, "requirements_colab": 20, "writelin": 20, "popen": 20, "pipe": 20, "stderr": 20, "stream": 20, "real": 20, "pacakg": 20, "global_land_mask": 20, "globe": 20, "2024": 20, "798394": 20, "local_xla": 20, "xla": 20, "stream_executor": 20, "cuda": 20, "cuda_dnn": 20, "9261": 20, "unabl": 20, "cudnn": 20, "plugin": 20, "been": 20, "798442": 20, "cuda_fft": 20, "607": 20, "cufft": 20, "799636": 20, "cuda_bla": 20, "1515": 20, "cubla": 20, "806541": 20, "avx2": [20, 21], "fma": [20, 21], "58": 20, "787356": 20, "tf2tensorrt": [20, 21], "py_util": [20, 21], "trt": [20, 21], "tensorrt": [20, 21], "laid": 20, "expert_spac": 20, "200_000": 20, "expert_x_rang": 20, "750_000": 20, "1000_000": 20, "expert_y_rang": 20, "1250_000": 20, "pred_spac": 20, "5_000": 20, "300_000": 20, "300km": 20, "200km": 20, "843": 20, "trim": 20, "tolist": 20, "239": 20, "283": 20, "500000": 20, "42": [20, 21], "500537": 20, "141": 20, "104": 20, "738": 20, "4500_000": 20, "558": 20, "008": 20, "204": 20, "292": 20, "xy_grid": 20, "eloc": 20, "floor": 20, "figur": 20, "add_subplot": 20, "tight_layout": 20, "pred_xy_grid": 20, "ploc": 20, "ocean": 20, "water": 20, "is_in_ocean": 20, "is_ocean": 20, "015": 20, "trainabl": [20, 21], "coord_col": 20, "00125": 20, "fall": 20, "runtim": 20, "restart": 20, "inline_exampl": 20, "long": 20, "22522": 20, "40000": 20, "400000": 20, "18326": 20, "84": 20, "933616": 20, "007": 20, "402": 20, "069": 20, "028": 20, "630": 20, "004": 20, "18518225": 20, "2196388": 20, "99998909": 20, "015251960320437637": 20, "0033263315432974965": 20, "169": 20, "200000": 20, "565051": 20, "85": 20, "9952": 20, "538": 20, "025": 20, "024": 20, "667": 20, "77494305": 20, "17842108": 20, "99999918": 20, "013368082738827579": 20, "0020117314690438594": 20, "277": 20, "86": 20, "418156": 20, "519": 20, "006": 20, "192": 20, "39984156": 20, "18095879": 20, "99999795": 20, "009120415704262684": 20, "0018969897287739795": 20, "262": 20, "88": 20, "525": 20, "148": 20, "84400339": 20, "23964815": 20, "99979748": 20, "014944354861840812": 20, "0016662922082378666": 20, "265": 20, "409": 20, "758": 20, "70994971": 20, "73287436": 20, "99998787": 20, "013182714519771526": 20, "0016309342610527026": 20, "157": 20, "63": 20, "434949": 20, "566": 20, "774": 20, "87515825": 20, "42140799": 20, "38400392": 20, "0234054708427411": 20, "0024454369299351034": 20, "302": 20, "87": 20, "467477": 20, "548": 20, "327": 20, "4622363": 20, "99998989": 20, "02839820263618021": 20, "0018270041796673681": 20, "337": 20, "209314": 20, "045": 20, "0867854": 20, "81865096": 20, "99999681": 20, "009910320491453206": 20, "001521808251644771": 20, "297": 20, "78": 20, "731": 20, "09295626": 20, "33062803": 20, "18147899": 20, "013011396496893987": 20, "0012717573269581414": 20, "309": 20, "569": 20, "723": 20, "92871006": 20, "49540471": 20, "72275757": 20, "013975739820522559": 20, "0016707081752818994": 20, "290": 20, "TO": 20, "591": 20, "036": 20, "24301087": 20, "99987378": 20, "80924605": 20, "01956517319240185": 20, "0023657032568156276": 20, "356": 20, "516": 20, "027": 20, "094": 20, "99996337": 20, "41811631": 20, "68766989": 20, "028613447922813402": 20, "0018067208179401064": 20, "295": 20, "334": 20, "86076982": 20, "83061267": 20, "99999634": 20, "010490567513137816": 20, "0012500000616336865": 20, "313": 20, "324": 20, "88011436": 20, "80125654": 20, "99986118": 20, "014733935666720745": 20, "0012912769336350393": 20, "285": 20, "009": 20, "564": 20, "459": 20, "75898604": 20, "26795872": 20, "9999778": 20, "008280192922011884": 20, "001351048066102522": 20, "287": 20, "556": 20, "505": 20, "10967565": 20, "99997547": 20, "40255658": 20, "020403337921804814": 20, "001968814297516638": 20, "288": 20, "23": 20, "135": 20, "806": 20, "99990841": 20, "99998534": 20, "79117828": 20, "021742751280636807": 20, "0017348602904437432": 20, "513": 20, "81936368": 20, "58679188": 20, "99999998": 20, "008812716397349098": 20, "0012500001531666658": 20, "80": 20, "532": 20, "125": 20, "46144366": 20, "99998244": 20, "99999987": 20, "007188224237062229": 20, "001410707517344195": 20, "317": 20, "540": 20, "256": 20, "99994992": 20, "62608557": 20, "89773345": 20, "010424757568026197": 20, "001446916573548475": 20, "267": 20, "450": 20, "227": 20, "99994606": 20, "99990943": 20, "99921322": 20, "01877397338395873": 20, "001740871935109944": 20, "543": 20, "233": 20, "97102647": 20, "53978974": 20, "99999702": 20, "010471833750417216": 20, "0014508711917120315": 20, "266": 20, "94": 20, "552": 20, "59684729": 20, "99998229": 20, "99999973": 20, "008968477715724356": 20, "0016418048697338695": 20, "275": 20, "536": 20, "144": 20, "99971927": 20, "99999931": 20, "99999999": 20, "005546008937381494": 20, "001462221192412413": 20, "948": 20, "99999529": 20, "22856027": 20, "10441799": 20, "005731038654881918": 20, "0012500000856986253": 20, "168": 20, "268": 20, "templat": 20, "plot_typ": 20, "heatmap": 20, "northern": 20, "hemispher": 20, "subplot_kwarg": 20, "018": 20, "016": 20, "smooth_config": 20, "previous": 20, "newli": 20, "smoother": 20, "smooth_result_config_fil": 20, "model_load_param": 20, "locexp_smooth": 20, "lengthscales_smooth": 20, "kernel_variance_smooth": 20, "likelihood_variance_smooth": 20, "inline_example_smooth": 20, "expert_locs_smooth": 20, "run_details_smooth": 20, "_read_params_from_fil": 20, "074": 20, "73489626": 20, "15229577": 20, "51415594": 20, "01819056731260972": 20, "005625": 20, "150": 20, "071": 20, "72415705": 20, "29357112": 20, "21639143": 20, "016447924388383984": 20, "261": 20, "79": 20, "068": 20, "22035795": 20, "31765587": 20, "70617345": 20, "013844313646142088": 20, "252": 20, "24807047": 20, "96815503": 20, "82125339": 20, "013042630316857111": 20, "251": 20, "10323576": 20, "64215751": 20, "8404427": 20, "013225876777264426": 20, "155": 20, "70": 20, "95927932": 20, "44094144": 20, "19315119": 20, "02066941549140503": 20, "073": 20, "26337444": 20, "10386541": 20, "33815906": 20, "018750428054645444": 20, "322": 20, "070": 20, "71900497": 20, "36778701": 20, "34009253": 20, "014903233354508176": 20, "298": 20, "49037633": 20, "49337642": 20, "70554387": 20, "012852545681274929": 20, "83": 20, "030": 20, "089": 20, "26028992": 20, "07482088": 20, "76478383": 20, "012492198893360734": 20, "93": 20, "072": 20, "27414434": 20, "22349163": 20, "01773265": 20, "021155333654392875": 20, "305": 20, "8479561": 20, "58258813": 20, "38658148": 20, "01912433225042327": 20, "293": 20, "13852657": 20, "70114399": 20, "91463961": 20, "014660416097052332": 20, "308": 20, "51351949": 20, "73086485": 20, "61929628": 20, "011779769809063076": 20, "07618425": 20, "07216258": 20, "69080709": 20, "010950245238431262": 20, "87492366": 20, "9700379": 20, "67482246": 20, "019389138262360436": 20, "005": 20, "02414022": 20, "3253465": 20, "1563721": 20, "016965998325579212": 20, "321": 20, "09928062": 20, "78071908": 20, "83628826": 20, "012666607361097171": 20, "284": 20, "67664142": 20, "15511903": 20, "58029635": 20, "009829028714011824": 20, "296": 20, "49402394": 20, "30011417": 20, "55484771": 20, "009064716874602533": 20, "99882634": 20, "05777882": 20, "95604446": 20, "017318299281238743": 20, "72": 20, "32678541": 20, "54964449": 20, "60104747": 20, "014479738850902037": 20, "40500585": 20, "40837273": 20, "11294036": 20, "010669340399804356": 20, "67690642": 20, "02479553": 20, "61829181": 20, "008193546633878432": 20, "255": 20, "895104": 20, "99241218": 20, "47375162": 20, "007517021521209238": 20, "161": 20, "oi_config_smooth": 20, "plt_data": 20, "pred_loc_t": 20, "advantag": 21, "561400": 21, "avx512f": 21, "152340": 21, "miniconda3": 21, "env": 21, "experiment": 21, "userwarn": 21, "check_shap": 21, "inherit_check_shap": 21, "2500": 21, "0x7efb4959b220": 21, "prediciton": 21, "detect": 21, "sklearn_gpr": 21, "pred_dict_sklearn": 21, "206": 21, "661093": 21, "common_runtim": 21, "gpu_devic": 21, "1639": 21, "6618": 21, "mb": 21, "nvidia": 21, "geforc": 21, "rtx": 21, "2080": 21, "pci": 21, "bu": 21, "0000": 21, "661674": 21, "5973": 21, "258": 21, "012": 21, "gpflow_gpr": 21, "pred_dict_gpflow": 21, "untrain": 21, "478252": 21, "478796": 21, "645": 21, "176": 21, "freez": 21, "likelhood": 21, "enitr": 21, "henc": 21, "f_mean_sklearn": 21, "f_var_sklearn": 21, "f_std_sklearn": 21, "f_mean_gpflow": 21, "f_var_gpflow": 21, "f_std_gpflow": 21, "0x7efaf84846d0": 21}, "objects": {"": [[0, 0, 0, "-", "GPSat"]], "GPSat": [[0, 0, 0, "-", "bin_data"], [0, 0, 0, "-", "dataloader"], [0, 0, 0, "-", "dataprepper"], [0, 0, 0, "-", "datetime_utils"], [0, 0, 0, "-", "decorators"], [0, 3, 1, "", "get_config_path"], [0, 3, 1, "", "get_data_path"], [0, 3, 1, "", "get_parent_path"], [0, 3, 1, "", "get_path"], [0, 0, 0, "-", "local_experts"], [0, 0, 0, "-", "plot_utils"], [0, 0, 0, "-", "postprocessing"], [0, 0, 0, "-", "prediction_locations"], [0, 0, 0, "-", "read_and_store"], [23, 0, 0, "-", "utils"], [0, 0, 0, "-", "vff"]], "GPSat.bin_data": [[0, 1, 1, "", "BinData"], [0, 3, 1, "", "get_bin_data_config"], [0, 3, 1, "", "plot_wrapper"]], "GPSat.bin_data.BinData": [[0, 2, 1, "", "bin_data"], [0, 2, 1, "", "bin_data_all_at_once"], [0, 2, 1, "", "bin_data_by_batch"], [0, 2, 1, "", "bin_wrapper"], [0, 2, 1, "", "write_dataframe_to_table"]], "GPSat.config_dataclasses": [[4, 1, 1, "", "DataConfig"], [4, 1, 1, "", "ExperimentConfig"], [4, 1, 1, "", "ExpertLocsConfig"], [4, 1, 1, "", "ModelConfig"], [4, 1, 1, "", "PredictionLocsConfig"], [4, 1, 1, "", "RunConfig"]], "GPSat.dataloader": [[5, 1, 1, "", "DataLoader"]], "GPSat.dataloader.DataLoader": [[5, 2, 1, "", "add_cols"], [5, 2, 1, "", "add_data_to_col"], [5, 2, 1, "", "bin_data"], [5, 2, 1, "", "bin_data_by"], [0, 2, 1, "", "connect_to_hdf_store"], [5, 2, 1, "", "data_select"], [0, 4, 1, "", "file_suffix_engine_map"], [0, 2, 1, "", "generate_local_expert_locations"], [5, 2, 1, "", "get_attribute_from_table"], [0, 2, 1, "", "get_keys"], [5, 2, 1, "", "get_masks_for_expert_loc"], [5, 2, 1, "", "get_run_info"], [5, 2, 1, "", "get_where_list"], [5, 2, 1, "", "get_where_list_legacy"], [5, 2, 1, "", "hdf_tables_in_store"], [5, 2, 1, "", "is_list_of_dict"], [5, 2, 1, "", "kdt_tree_list_for_local_select"], [5, 2, 1, "", "load"], [5, 2, 1, "", "local_data_select"], [5, 2, 1, "", "make_multiindex_df"], [5, 2, 1, "", "mindex_df_to_mindex_dataarray"], [5, 2, 1, "", "read_flat_files"], [5, 2, 1, "", "read_from_multiple_files"], [5, 2, 1, "", "read_from_npy"], [5, 2, 1, "", "read_from_pkl_dict"], [5, 2, 1, "", "read_hdf"], [5, 2, 1, "", "row_select_bool"], [0, 2, 1, "", "write_to_hdf"], [0, 2, 1, "", "write_to_netcdf"]], "GPSat.dataprepper": [[0, 1, 1, "", "DataPrep"]], "GPSat.dataprepper.DataPrep": [[0, 2, 1, "", "bin_data"], [0, 2, 1, "", "bin_data_by"]], "GPSat.datetime_utils": [[0, 3, 1, "", "date_from_datetime"], [0, 3, 1, "", "datetime_from_float_column"], [0, 3, 1, "", "datetime_from_ymd_cols"], [0, 3, 1, "", "from_file_start_end_datetime_GPOD"], [0, 3, 1, "", "from_file_start_end_datetime_SARAL"]], "GPSat.decorators": [[0, 3, 1, "", "timer"]], "GPSat.local_experts": [[0, 1, 1, "", "LocalExpertData"], [8, 1, 1, "", "LocalExpertOI"], [8, 3, 1, "", "get_results_from_h5file"]], "GPSat.local_experts.LocalExpertData": [[0, 4, 1, "", "col_funcs"], [0, 4, 1, "", "col_select"], [0, 4, 1, "", "coords_col"], [0, 4, 1, "", "data_source"], [0, 4, 1, "", "engine"], [0, 4, 1, "", "file_suffix_engine_map"], [0, 4, 1, "", "global_select"], [0, 2, 1, "", "load"], [0, 4, 1, "", "local_select"], [0, 4, 1, "", "obs_col"], [0, 4, 1, "", "read_kwargs"], [0, 4, 1, "", "row_select"], [0, 2, 1, "", "set_data_source"], [0, 4, 1, "", "table"], [0, 4, 1, "", "where"]], "GPSat.local_experts.LocalExpertOI": [[8, 2, 1, "", "__init__"], [0, 2, 1, "", "dict_of_array_to_table"], [0, 4, 1, "", "file_suffix_engine_map"], [0, 2, 1, "", "load_params"], [0, 2, 1, "", "plot_locations_and_obs"], [8, 2, 1, "", "run"], [0, 2, 1, "", "set_data"], [0, 2, 1, "", "set_expert_locations"], [0, 2, 1, "", "set_model"], [0, 2, 1, "", "set_pred_loc"]], "GPSat.models": [[9, 0, 0, "-", "base_model"], [10, 0, 0, "-", "gpflow_models"], [11, 0, 0, "-", "gpytorch_models"], [12, 0, 0, "-", "pure_python_gpr"], [13, 0, 0, "-", "sklearn_models"], [10, 0, 0, "-", "vff_model"]], "GPSat.models.base_model": [[9, 1, 1, "", "BaseGPRModel"]], "GPSat.models.base_model.BaseGPRModel": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "get_objective_function_value"], [9, 2, 1, "", "get_parameters"], [9, 2, 1, "", "optimise_parameters"], [9, 5, 1, "", "param_names"], [9, 2, 1, "", "predict"], [9, 2, 1, "", "set_parameter_constraints"], [9, 2, 1, "", "set_parameters"]], "GPSat.models.gpflow_models": [[10, 1, 1, "", "GPflowGPRModel"], [10, 1, 1, "", "GPflowSGPRModel"], [10, 1, 1, "", "GPflowSVGPModel"]], "GPSat.models.gpflow_models.GPflowGPRModel": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "get_kernel_variance"], [10, 2, 1, "", "get_lengthscales"], [10, 2, 1, "", "get_likelihood_variance"], [10, 2, 1, "", "get_objective_function_value"], [10, 2, 1, "", "optimise_parameters"], [10, 5, 1, "", "param_names"], [10, 2, 1, "", "predict"], [10, 2, 1, "", "set_kernel_variance"], [10, 2, 1, "", "set_kernel_variance_constraints"], [10, 2, 1, "", "set_lengthscales"], [10, 2, 1, "", "set_lengthscales_constraints"], [10, 2, 1, "", "set_likelihood_variance"], [10, 2, 1, "", "set_likelihood_variance_constraints"], [10, 2, 1, "", "update_obs_data"]], "GPSat.models.gpflow_models.GPflowSGPRModel": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "get_inducing_points"], [10, 2, 1, "", "get_objective_function_value"], [10, 2, 1, "", "optimise_parameters"], [10, 5, 1, "", "param_names"], [10, 2, 1, "", "set_inducing_points"]], "GPSat.models.gpflow_models.GPflowSVGPModel": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "get_inducing_chol"], [10, 2, 1, "", "get_inducing_mean"], [10, 2, 1, "", "get_inducing_points"], [10, 2, 1, "", "get_objective_function_value"], [10, 2, 1, "", "optimise_parameters"], [10, 5, 1, "", "param_names"], [10, 2, 1, "", "set_inducing_chol"], [10, 2, 1, "", "set_inducing_mean"], [10, 2, 1, "", "set_inducing_points"]], "GPSat.models.gpytorch_models": [[11, 1, 1, "", "ExactGPR"], [11, 1, 1, "", "GPyTorchGPRModel"], [11, 1, 1, "", "GPyTorchKISSGPModel"]], "GPSat.models.gpytorch_models.ExactGPR": [[11, 2, 1, "", "forward"]], "GPSat.models.gpytorch_models.GPyTorchGPRModel": [[11, 2, 1, "", "get_kernel_variance"], [11, 2, 1, "", "get_lengthscales"], [11, 2, 1, "", "get_likelihood_variance"], [11, 2, 1, "", "get_objective_function_value"], [11, 2, 1, "", "get_smoothness"], [11, 2, 1, "", "optimise_parameters"], [11, 5, 1, "", "param_names"], [11, 2, 1, "", "predict"], [11, 2, 1, "", "set_kernel_variance"], [11, 2, 1, "", "set_kernel_variance_constraints"], [11, 2, 1, "", "set_lengthscales"], [11, 2, 1, "", "set_lengthscales_constraints"], [11, 2, 1, "", "set_likelihood_variance"], [11, 2, 1, "", "set_likelihood_variance_constraints"], [11, 2, 1, "", "set_smoothness"]], "GPSat.models.gpytorch_models.GPyTorchKISSGPModel": [[11, 2, 1, "", "get_lengthscales"], [11, 2, 1, "", "get_smoothness"], [11, 2, 1, "", "set_lengthscale_constraints"], [11, 2, 1, "", "set_lengthscales"], [11, 2, 1, "", "set_smoothness"]], "GPSat.models.pure_python_gpr": [[12, 3, 1, "", "GPR"], [12, 3, 1, "", "Nystroem"], [12, 1, 1, "", "PurePythonGPR"], [12, 3, 1, "", "SGPkernel"], [12, 3, 1, "", "SMLII_mod"]], "GPSat.models.pure_python_gpr.PurePythonGPR": [[12, 2, 1, "", "SGPkernel"], [12, 2, 1, "", "SMLII"], [12, 2, 1, "", "get_kernel_variance"], [12, 2, 1, "", "get_lengthscales"], [12, 2, 1, "", "get_likelihood_variance"], [12, 2, 1, "", "get_loglikelihood"], [12, 2, 1, "", "get_objective_function_value"], [12, 2, 1, "", "get_transform_funcs"], [12, 2, 1, "", "optimise"], [12, 2, 1, "", "optimise_parameters"], [12, 5, 1, "", "param_names"], [12, 2, 1, "", "predict"], [12, 2, 1, "", "set_kernel_variance"], [12, 2, 1, "", "set_kernel_variance_constraints"], [12, 2, 1, "", "set_lengthscales"], [12, 2, 1, "", "set_lengthscales_constraints"], [12, 2, 1, "", "set_likelihood_variance"], [12, 2, 1, "", "set_likelihood_variance_constraints"]], "GPSat.models.sklearn_models": [[13, 1, 1, "", "sklearnGPRModel"]], "GPSat.models.sklearn_models.sklearnGPRModel": [[13, 2, 1, "", "get_kernel_variance"], [13, 2, 1, "", "get_lengthscales"], [13, 2, 1, "", "get_likelihood_variance"], [13, 2, 1, "", "get_objective_function_value"], [13, 2, 1, "", "optimise_parameters"], [13, 5, 1, "", "param_names"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "set_kernel_variance"], [13, 2, 1, "", "set_kernel_variance_constraints"], [13, 2, 1, "", "set_lengthscales"], [13, 2, 1, "", "set_lengthscales_constraints"], [13, 2, 1, "", "set_likelihood_variance"]], "GPSat.models.vff_model": [[10, 1, 1, "", "GPflowVFFModel"]], "GPSat.models.vff_model.GPflowVFFModel": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "get_kernel_variance"], [10, 2, 1, "", "get_lengthscales"], [10, 2, 1, "", "get_objective_function_value"], [10, 2, 1, "", "set_kernel_variance"], [10, 2, 1, "", "set_kernel_variance_constraints"], [10, 2, 1, "", "set_lengthscales"], [10, 2, 1, "", "set_lengthscales_constraints"]], "GPSat.plot_utils": [[0, 3, 1, "", "get_projection"], [0, 3, 1, "", "plot_gpflow_minimal_example"], [0, 3, 1, "", "plot_hist"], [0, 3, 1, "", "plot_hist_from_results_data"], [0, 3, 1, "", "plot_hyper_parameters"], [0, 3, 1, "", "plot_pcolormesh"], [0, 3, 1, "", "plot_pcolormesh_from_results_data"], [0, 3, 1, "", "plot_wrapper"], [0, 3, 1, "", "plot_xy"], [0, 3, 1, "", "plot_xy_from_results_data"], [0, 3, 1, "", "plots_from_config"]], "GPSat.postprocessing": [[22, 1, 1, "", "SmoothingConfig"], [0, 3, 1, "", "get_smooth_params_config"], [0, 3, 1, "", "glue_local_predictions"], [22, 3, 1, "", "glue_local_predictions_1d"], [22, 3, 1, "", "glue_local_predictions_2d"], [22, 3, 1, "", "smooth_hyperparameters"]], "GPSat.postprocessing.SmoothingConfig": [[0, 2, 1, "", "get"], [0, 4, 1, "", "l_x"], [0, 4, 1, "", "l_y"], [0, 4, 1, "", "max"], [0, 4, 1, "", "min"]], "GPSat.prediction_locations": [[0, 1, 1, "", "PredictionLocations"]], "GPSat.prediction_locations.PredictionLocations": [[0, 5, 1, "", "coords_col"], [0, 5, 1, "", "expert_loc"]], "GPSat.read_and_store": [[0, 3, 1, "", "get_dirs_to_search"], [0, 3, 1, "", "update_attr"]], "GPSat.utils": [[23, 3, 1, "", "EASE2toWGS84"], [23, 3, 1, "", "EASE2toWGS84_New"], [23, 3, 1, "", "WGS84toEASE2"], [23, 3, 1, "", "WGS84toEASE2_New"], [23, 3, 1, "", "array_to_dataframe"], [23, 3, 1, "", "assign_category_col"], [23, 3, 1, "", "bin_obs_by_date"], [23, 3, 1, "", "check_prev_oi_config"], [23, 3, 1, "", "compare_dataframes"], [23, 3, 1, "", "config_func"], [23, 3, 1, "", "convert_lon_lat_str"], [23, 3, 1, "", "cprint"], [23, 3, 1, "", "dataframe_to_2d_array"], [23, 3, 1, "", "dataframe_to_array"], [23, 3, 1, "", "dict_of_array_to_dict_of_dataframe"], [23, 3, 1, "", "diff_distance"], [23, 3, 1, "", "expand_dict_by_vals"], [23, 3, 1, "", "get_col_values"], [23, 3, 1, "", "get_config_from_sysargv"], [23, 3, 1, "", "get_git_information"], [23, 3, 1, "", "get_previous_oi_config"], [23, 3, 1, "", "get_weighted_values"], [23, 3, 1, "", "glue_local_predictions"], [23, 3, 1, "", "grid_2d_flatten"], [23, 3, 1, "", "guess_track_num"], [23, 3, 1, "", "inverse_sigmoid"], [23, 3, 1, "", "inverse_softplus"], [23, 3, 1, "", "json_load"], [23, 3, 1, "", "json_serializable"], [23, 3, 1, "", "log_lines"], [23, 3, 1, "", "match"], [23, 3, 1, "", "move_to_archive"], [23, 3, 1, "", "nested_dict_literal_eval"], [23, 3, 1, "", "nll"], [23, 3, 1, "", "not_nan"], [23, 3, 1, "", "pandas_to_dict"], [23, 3, 1, "", "pip_freeze_to_dataframe"], [23, 3, 1, "", "pretty_print_class"], [23, 3, 1, "", "rmse"], [23, 3, 1, "", "sigmoid"], [23, 3, 1, "", "softplus"], [23, 3, 1, "", "sparse_true_array"], [23, 3, 1, "", "stats_on_vals"], [23, 3, 1, "", "to_array"], [23, 3, 1, "", "track_num_for_date"]], "GPSat.vff": [[0, 1, 1, "", "BlockDiagMat"], [0, 1, 1, "", "DiagMat"], [0, 1, 1, "", "GPR_kron"], [0, 1, 1, "", "LowRankMat"], [0, 1, 1, "", "LowRankMatNeg"], [0, 1, 1, "", "Rank1Mat"], [0, 1, 1, "", "Rank1MatNeg"], [0, 3, 1, "", "kron"], [0, 3, 1, "", "kron_two"], [0, 3, 1, "", "make_Kuf"], [0, 3, 1, "", "make_Kuf_np"], [0, 3, 1, "", "make_Kuu"], [0, 3, 1, "", "make_kvs"], [0, 3, 1, "", "make_kvs_np"], [0, 3, 1, "", "make_kvs_two"], [0, 3, 1, "", "make_kvs_two_np"]], "GPSat.vff.BlockDiagMat": [[0, 2, 1, "", "get"], [0, 2, 1, "", "get_diag"], [0, 2, 1, "", "inv"], [0, 2, 1, "", "inv_diag"], [0, 2, 1, "", "logdet"], [0, 2, 1, "", "matmul"], [0, 2, 1, "", "matmul_sqrt"], [0, 2, 1, "", "matmul_sqrt_transpose"], [0, 5, 1, "", "shape"], [0, 2, 1, "", "solve"], [0, 5, 1, "", "sqrt_dims"], [0, 2, 1, "", "trace_KiX"]], "GPSat.vff.DiagMat": [[0, 2, 1, "", "get"], [0, 2, 1, "", "get_diag"], [0, 2, 1, "", "inv"], [0, 2, 1, "", "inv_diag"], [0, 2, 1, "", "logdet"], [0, 2, 1, "", "matmul"], [0, 2, 1, "", "matmul_sqrt"], [0, 2, 1, "", "matmul_sqrt_transpose"], [0, 5, 1, "", "shape"], [0, 2, 1, "", "solve"], [0, 5, 1, "", "sqrt_dims"], [0, 2, 1, "", "trace_KiX"]], "GPSat.vff.GPR_kron": [[0, 2, 1, "", "elbo"], [0, 2, 1, "", "maximum_log_likelihood_objective"], [0, 2, 1, "", "predict_f"]], "GPSat.vff.LowRankMat": [[0, 2, 1, "", "get"], [0, 2, 1, "", "get_diag"], [0, 2, 1, "", "inv"], [0, 2, 1, "", "inv_diag"], [0, 2, 1, "", "logdet"], [0, 2, 1, "", "matmul"], [0, 2, 1, "", "matmul_sqrt"], [0, 2, 1, "", "matmul_sqrt_transpose"], [0, 5, 1, "", "shape"], [0, 2, 1, "", "solve"], [0, 5, 1, "", "sqrt_dims"], [0, 2, 1, "", "trace_KiX"]], "GPSat.vff.LowRankMatNeg": [[0, 2, 1, "", "get"], [0, 5, 1, "", "shape"]], "GPSat.vff.Rank1Mat": [[0, 2, 1, "", "get"], [0, 2, 1, "", "get_diag"], [0, 2, 1, "", "inv"], [0, 2, 1, "", "inv_diag"], [0, 2, 1, "", "logdet"], [0, 2, 1, "", "matmul"], [0, 2, 1, "", "matmul_sqrt"], [0, 2, 1, "", "matmul_sqrt_transpose"], [0, 5, 1, "", "shape"], [0, 2, 1, "", "solve"], [0, 5, 1, "", "sqrt_dims"], [0, 2, 1, "", "trace_KiX"]], "GPSat.vff.Rank1MatNeg": [[0, 2, 1, "", "get"], [0, 5, 1, "", "shape"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"gpsat": [0, 2, 6, 14], "packag": [0, 2, 17, 20], "submodul": [0, 2], "bin_data": 0, "modul": [0, 2], "dataload": [0, 5, 18], "dataprepp": 0, "datetime_util": 0, "decor": 0, "local_expert": 0, "plot_util": 0, "postprocess": [0, 22], "prediction_loc": 0, "read_and_stor": 0, "util": [0, 2, 23], "vff": 0, "content": [0, 2], "model": [1, 2, 4, 6, 9, 10, 11, 12, 13, 15, 16], "multioutput": 2, "gpr": [2, 19], "likelihood": [2, 19], "command": 3, "line": 3, "exampl": [3, 4, 17, 18, 20], "read": [3, 17, 18, 20], "flat": 3, "file": [3, 18], "store": 3, "hdf5": [3, 18], "plot": [3, 17, 20], "raw": [3, 17, 20], "observ": 3, "bin": [3, 17, 20], "run": [3, 4, 16], "optim": [3, 8, 20], "interpol": [3, 8, 20], "oi": [3, 20], "post": 3, "process": [3, 19], "result": [3, 17], "smooth": [3, 20], "hyper": [3, 20], "paramet": [3, 17, 20], "load": [3, 18], "gener": 3, "predict": [3, 4, 16, 19, 20], "configur": [4, 16, 20], "dataclass": [4, 16], "data": [4, 16, 17, 18, 20], "expert": [4, 8, 15, 16, 20], "locat": [4, 16, 20], "experi": [4, 16], "welcom": 6, "": 6, "document": 6, "benefit": 6, "local": [6, 8, 15, 16, 20], "gp": [6, 15, 16], "spatial": 6, "support": 6, "enhanc": 6, "get": [6, 20], "start": 6, "todo": [6, 7], "api": [6, 16], "refer": 6, "indic": 6, "tabl": 6, "instal": [7, 20], "base": 9, "gpflow": 10, "gpytorch": 11, "pure": 12, "python": 12, "return": 12, "scikit": 13, "learn": 13, "part": [15, 16], "i": [15, 18], "A": 15, "1d": 15, "case": 15, "studi": 15, "ii": 16, "us": [16, 18, 20, 21], "localexpertoi": 16, "1": [16, 17], "config": [16, 17], "2": 16, "3": 16, "4": 16, "more": [16, 18], "import": [17, 20], "statist": 17, "valu": 17, "dataprep": 17, "bin_data_bi": 17, "2d": 17, "appli": [17, 18], "d": 17, "bindata": 17, "class": 17, "method": 18, "con": 18, "t": 18, "multipl": 18, "folder": 18, "save": 18, "from": 18, "parquet": 18, "netcdf": 18, "where": 18, "select": 18, "subset": 18, "without": 18, "have": 18, "entir": 18, "memori": 18, "row_select": 18, "after": 18, "advanc": 18, "col_func": 18, "function": 18, "creat": 18, "modifi": 18, "column": 18, "basic": 19, "gaussian": 19, "regress": 19, "The": 19, "train": [19, 21], "inlin": 20, "satellit": 20, "colab": 20, "Then": 20, "clone": 20, "stat": 20, "visualis": 20, "weight": 20, "combin": 20, "gpu": 21, "acceler": 21, "infer": 21}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"GPSat package": [[0, "gpsat-package"]], "Submodules": [[0, "submodules"], [2, "submodules"]], "GPSat.bin_data module": [[0, "module-GPSat.bin_data"]], "GPSat.dataloader module": [[0, "module-GPSat.dataloader"]], "GPSat.dataprepper module": [[0, "module-GPSat.dataprepper"]], "GPSat.datetime_utils module": [[0, "module-GPSat.datetime_utils"]], "GPSat.decorators module": [[0, "module-GPSat.decorators"]], "GPSat.local_experts module": [[0, "module-GPSat.local_experts"]], "GPSat.plot_utils module": [[0, "module-GPSat.plot_utils"]], "GPSat.postprocessing module": [[0, "module-GPSat.postprocessing"]], "GPSat.prediction_locations module": [[0, "module-GPSat.prediction_locations"]], "GPSat.read_and_store module": [[0, "module-GPSat.read_and_store"]], "GPSat.utils module": [[0, "module-GPSat.utils"]], "GPSat.vff module": [[0, "module-GPSat.vff"]], "Module contents": [[0, "module-GPSat"], [2, "module-contents"]], "Models": [[1, "models"]], "GPSat.models.multioutput package": [[2, "gpsat-models-multioutput-package"]], "GPSat.models.multioutput.gpr module": [[2, "gpsat-models-multioutput-gpr-module"]], "GPSat.models.multioutput.likelihoods module": [[2, "gpsat-models-multioutput-likelihoods-module"]], "GPSat.models.multioutput.models module": [[2, "gpsat-models-multioutput-models-module"]], "GPSat.models.multioutput.utils module": [[2, "gpsat-models-multioutput-utils-module"]], "Command Line Examples": [[3, "command-line-examples"]], "Read in Flat Files, Store in HDF5 File": [[3, "read-in-flat-files-store-in-hdf5-file"]], "Plot Raw Observations": [[3, "plot-raw-observations"]], "Bin Raw Observations": [[3, "bin-raw-observations"]], "Run Optimal Interpolation (OI) on Binned Observations": [[3, "run-optimal-interpolation-oi-on-binned-observations"]], "Post Process OI Results: Smooth Hyper Parameters": [[3, "post-process-oi-results-smooth-hyper-parameters"]], "Run OI by Loading Hyper-Parameters": [[3, "run-oi-by-loading-hyper-parameters"]], "Generate Plots of the Predictions": [[3, "generate-plots-of-the-predictions"]], "Configuration dataclasses": [[4, "configuration-dataclasses"], [16, "Configuration-dataclasses"]], "Example": [[4, "example"]], "Data configuration": [[4, "data-configuration"]], "Model configuration": [[4, "model-configuration"]], "Expert location configuration": [[4, "expert-location-configuration"]], "Prediction location configuration": [[4, "prediction-location-configuration"]], "Run configuration": [[4, "run-configuration"]], "Experiment configuration": [[4, "experiment-configuration"]], "Dataloader": [[5, "dataloader"]], "Welcome to GPSat\u2019s documentation!": [[6, "welcome-to-gpsat-s-documentation"]], "Benefits of Local GPs for spatial modelling": [[6, "benefits-of-local-gps-for-spatial-modelling"]], "Supported Enhancements": [[6, "supported-enhancements"]], "Getting started": [[6, null]], "Todo": [[6, "id1"], [6, "id2"], [7, "id1"]], "API Reference": [[6, null]], "Indices and tables": [[6, "indices-and-tables"]], "Installation": [[7, "installation"]], "Local expert optimal interpolation": [[8, "local-expert-optimal-interpolation"]], "Base model": [[9, "base-model"]], "GPflow models": [[10, "gpflow-models"]], "GPyTorch models": [[11, "gpytorch-models"]], "Pure python models": [[12, "pure-python-models"]], "Returns": [[12, "returns"]], "Scikit-learn models": [[13, "scikit-learn-models"]], "GPSat": [[14, "gpsat"]], "Modelling with local GP experts (Part I): A 1D case study": [[15, "Modelling-with-local-GP-experts-(Part-I):-A-1D-case-study"]], "Local GP experts": [[15, "Local-GP-experts"]], "Modelling with local GP experts (Part II): Using the LocalExpertOI API": [[16, "Modelling-with-local-GP-experts-(Part-II):-Using-the-LocalExpertOI-API"]], "1. Local expert config": [[16, "1.-Local-expert-config"]], "2. Model config": [[16, "2.-Model-config"]], "3. Data config": [[16, "3.-Data-config"]], "4. Prediction location config": [[16, "4.-Prediction-location-config"]], "Run experiment": [[16, "Run-experiment"]], "Using more local experts": [[16, "Using-more-local-experts"]], "Bin Data Examples": [[17, "Bin-Data-Examples"]], "import packages": [[17, "import-packages"]], "parameters": [[17, "parameters"]], "read in raw data": [[17, "read-in-raw-data"], [20, "read-in-raw-data"]], "Statistic on Values": [[17, "Statistic-on-Values"]], "DataPrep.bin_data_by: 2d binning": [[17, "DataPrep.bin_data_by:-2d-binning"]], "plot results": [[17, "plot-results"]], "apply 1-d binning": [[17, "apply-1-d-binning"]], "BinData class": [[17, "BinData-class"]], "bin config": [[17, "bin-config"]], "DataLoader Examples": [[18, "DataLoader-Examples"]], "load method": [[18, "load-method"]], "load method con\u2019t": [[18, "load-method-con't"]], "read in multiple files in a folder": [[18, "read-in-multiple-files-in-a-folder"]], "save and read from parquet file": [[18, "save-and-read-from-parquet-file"]], "save and read from hdf5 file": [[18, "save-and-read-from-hdf5-file"]], "save and read from netcdf file": [[18, "save-and-read-from-netcdf-file"]], "use \u2018where\u2019 to select subset without having to read entirely into memory": [[18, "use-'where'-to-select-subset-without-having-to-read-entirely-into-memory"]], "use \u2018row_select\u2019 to select subset after data is loaded into memory": [[18, "use-'row_select'-to-select-subset-after-data-is-loaded-into-memory"]], "Advanced: more row_select and where": [[18, "Advanced:-more-row_select-and-where"]], "Advanced: col_funcs - apply functions to create or modify columns": [[18, "Advanced:-col_funcs---apply-functions-to-create-or-modify-columns"]], "Basic Gaussian process regression (GPR)": [[19, "Basic-Gaussian-process-regression-(GPR)"]], "Gaussian processes": [[19, "Gaussian-processes"]], "The likelihood": [[19, "The-likelihood"]], "Prediction": [[19, "Prediction"]], "Training": [[19, "Training"]], "Inline Example of Local Expert \u2018Optimal Interpolation\u2019 on Satellite Data": [[20, "Inline-Example-of-Local-Expert-'Optimal-Interpolation'-on-Satellite-Data"]], "Using Colab? Then clone and install": [[20, "Using-Colab?-Then-clone-and-install"]], "Import Packages": [[20, "Import-Packages"]], "Parameters": [[20, "Parameters"]], "stats on data": [[20, "stats-on-data"]], "visualise data": [[20, "visualise-data"]], "bin raw data": [[20, "bin-raw-data"]], "plot binned data": [[20, "plot-binned-data"]], "expert locations": [[20, "expert-locations"]], "plot expert locations": [[20, "plot-expert-locations"]], "prediction locations": [[20, "prediction-locations"]], "plot prediction locations": [[20, "plot-prediction-locations"]], "configurations:": [[20, "configurations:"]], "Local Expert OI": [[20, "Local-Expert-OI"]], "Plot Smoothed Hyper Parameters": [[20, "Plot-Smoothed-Hyper-Parameters"]], "get weighted combinations predictions and plot": [[20, "get-weighted-combinations-predictions-and-plot"]], "Using GPUs to accelerate training and inference": [[21, "Using-GPUs-to-accelerate-training-and-inference"]], "Postprocessing": [[22, "postprocessing"]], "Utils": [[23, "utils"]]}, "indexentries": {"bindata (class in gpsat.bin_data)": [[0, "GPSat.bin_data.BinData"]], "blockdiagmat (class in gpsat.vff)": [[0, "GPSat.vff.BlockDiagMat"]], "dataloader (class in gpsat.dataloader)": [[0, "GPSat.dataloader.DataLoader"], [5, "GPSat.dataloader.DataLoader"]], "dataprep (class in gpsat.dataprepper)": [[0, "GPSat.dataprepper.DataPrep"]], "diagmat (class in gpsat.vff)": [[0, "GPSat.vff.DiagMat"]], "ease2towgs84() (in module gpsat.utils)": [[0, "GPSat.utils.EASE2toWGS84"], [23, "GPSat.utils.EASE2toWGS84"]], "ease2towgs84_new() (in module gpsat.utils)": [[0, "GPSat.utils.EASE2toWGS84_New"], [23, "GPSat.utils.EASE2toWGS84_New"]], "gpr_kron (class in gpsat.vff)": [[0, "GPSat.vff.GPR_kron"]], "gpsat": [[0, "module-GPSat"]], "gpsat.bin_data": [[0, "module-GPSat.bin_data"]], "gpsat.dataloader": [[0, "module-GPSat.dataloader"]], "gpsat.dataprepper": [[0, "module-GPSat.dataprepper"]], "gpsat.datetime_utils": [[0, "module-GPSat.datetime_utils"]], "gpsat.decorators": [[0, "module-GPSat.decorators"]], "gpsat.local_experts": [[0, "module-GPSat.local_experts"]], "gpsat.plot_utils": [[0, "module-GPSat.plot_utils"]], "gpsat.postprocessing": [[0, "module-GPSat.postprocessing"]], "gpsat.prediction_locations": [[0, "module-GPSat.prediction_locations"]], "gpsat.read_and_store": [[0, "module-GPSat.read_and_store"]], "gpsat.utils": [[0, "module-GPSat.utils"], [23, "module-GPSat.utils"]], "gpsat.vff": [[0, "module-GPSat.vff"]], "localexpertdata (class in gpsat.local_experts)": [[0, "GPSat.local_experts.LocalExpertData"]], "localexpertoi (class in gpsat.local_experts)": [[0, "GPSat.local_experts.LocalExpertOI"], [8, "GPSat.local_experts.LocalExpertOI"]], "lowrankmat (class in gpsat.vff)": [[0, "GPSat.vff.LowRankMat"]], "lowrankmatneg (class in gpsat.vff)": [[0, "GPSat.vff.LowRankMatNeg"]], "predictionlocations (class in gpsat.prediction_locations)": [[0, "GPSat.prediction_locations.PredictionLocations"]], "rank1mat (class in gpsat.vff)": [[0, "GPSat.vff.Rank1Mat"]], "rank1matneg (class in gpsat.vff)": [[0, "GPSat.vff.Rank1MatNeg"]], "smoothingconfig (class in gpsat.postprocessing)": [[0, "GPSat.postprocessing.SmoothingConfig"], [22, "GPSat.postprocessing.SmoothingConfig"]], "wgs84toease2() (in module gpsat.utils)": [[0, "GPSat.utils.WGS84toEASE2"], [23, "GPSat.utils.WGS84toEASE2"]], "wgs84toease2_new() (in module gpsat.utils)": [[0, "GPSat.utils.WGS84toEASE2_New"], [23, "GPSat.utils.WGS84toEASE2_New"]], "add_cols() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.add_cols"], [5, "GPSat.dataloader.DataLoader.add_cols"]], "add_data_to_col() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.add_data_to_col"], [5, "GPSat.dataloader.DataLoader.add_data_to_col"]], "array_to_dataframe() (in module gpsat.utils)": [[0, "GPSat.utils.array_to_dataframe"], [23, "GPSat.utils.array_to_dataframe"]], "assign_category_col() (in module gpsat.utils)": [[0, "GPSat.utils.assign_category_col"], [23, "GPSat.utils.assign_category_col"]], "bin_data() (gpsat.bin_data.bindata method)": [[0, "GPSat.bin_data.BinData.bin_data"]], "bin_data() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.bin_data"], [5, "GPSat.dataloader.DataLoader.bin_data"]], "bin_data() (gpsat.dataprepper.dataprep static method)": [[0, "GPSat.dataprepper.DataPrep.bin_data"]], "bin_data_all_at_once() (gpsat.bin_data.bindata method)": [[0, "GPSat.bin_data.BinData.bin_data_all_at_once"]], "bin_data_by() (gpsat.dataloader.dataloader class method)": [[0, "GPSat.dataloader.DataLoader.bin_data_by"], [5, "GPSat.dataloader.DataLoader.bin_data_by"]], "bin_data_by() (gpsat.dataprepper.dataprep class method)": [[0, "GPSat.dataprepper.DataPrep.bin_data_by"]], "bin_data_by_batch() (gpsat.bin_data.bindata method)": [[0, "GPSat.bin_data.BinData.bin_data_by_batch"]], "bin_obs_by_date() (in module gpsat.utils)": [[0, "GPSat.utils.bin_obs_by_date"], [23, "GPSat.utils.bin_obs_by_date"]], "bin_wrapper() (gpsat.bin_data.bindata static method)": [[0, "GPSat.bin_data.BinData.bin_wrapper"]], "check_prev_oi_config() (in module gpsat.utils)": [[0, "GPSat.utils.check_prev_oi_config"], [23, "GPSat.utils.check_prev_oi_config"]], "col_funcs (gpsat.local_experts.localexpertdata attribute)": [[0, "GPSat.local_experts.LocalExpertData.col_funcs"]], "col_select (gpsat.local_experts.localexpertdata attribute)": [[0, "GPSat.local_experts.LocalExpertData.col_select"]], "compare_dataframes() (in module gpsat.utils)": [[0, "GPSat.utils.compare_dataframes"], [23, "GPSat.utils.compare_dataframes"]], "config_func() (in module gpsat.utils)": [[0, "GPSat.utils.config_func"], [23, "GPSat.utils.config_func"]], "connect_to_hdf_store() (gpsat.dataloader.dataloader method)": [[0, "GPSat.dataloader.DataLoader.connect_to_hdf_store"]], "convert_lon_lat_str() (in module gpsat.utils)": [[0, "GPSat.utils.convert_lon_lat_str"], [23, "GPSat.utils.convert_lon_lat_str"]], "coords_col (gpsat.local_experts.localexpertdata attribute)": [[0, "GPSat.local_experts.LocalExpertData.coords_col"]], "coords_col (gpsat.prediction_locations.predictionlocations property)": [[0, "GPSat.prediction_locations.PredictionLocations.coords_col"]], "cprint() (in module gpsat.utils)": [[0, "GPSat.utils.cprint"], [23, "GPSat.utils.cprint"]], "data_select() (gpsat.dataloader.dataloader class method)": [[0, "GPSat.dataloader.DataLoader.data_select"], [5, "GPSat.dataloader.DataLoader.data_select"]], "data_source (gpsat.local_experts.localexpertdata attribute)": [[0, "GPSat.local_experts.LocalExpertData.data_source"]], "dataframe_to_2d_array() (in module gpsat.utils)": [[0, "GPSat.utils.dataframe_to_2d_array"], [23, "GPSat.utils.dataframe_to_2d_array"]], "dataframe_to_array() (in module gpsat.utils)": [[0, "GPSat.utils.dataframe_to_array"], [23, "GPSat.utils.dataframe_to_array"]], "date_from_datetime() (in module gpsat.datetime_utils)": [[0, "GPSat.datetime_utils.date_from_datetime"]], "datetime_from_float_column() (in module gpsat.datetime_utils)": [[0, "GPSat.datetime_utils.datetime_from_float_column"]], "datetime_from_ymd_cols() (in module gpsat.datetime_utils)": [[0, "GPSat.datetime_utils.datetime_from_ymd_cols"]], "dict_of_array_to_dict_of_dataframe() (in module gpsat.utils)": [[0, "GPSat.utils.dict_of_array_to_dict_of_dataframe"], [23, "GPSat.utils.dict_of_array_to_dict_of_dataframe"]], "dict_of_array_to_table() (gpsat.local_experts.localexpertoi static method)": [[0, "GPSat.local_experts.LocalExpertOI.dict_of_array_to_table"]], "diff_distance() (in module gpsat.utils)": [[0, "GPSat.utils.diff_distance"], [23, "GPSat.utils.diff_distance"]], "elbo() (gpsat.vff.gpr_kron method)": [[0, "GPSat.vff.GPR_kron.elbo"]], "engine (gpsat.local_experts.localexpertdata attribute)": [[0, "GPSat.local_experts.LocalExpertData.engine"]], "expand_dict_by_vals() (in module gpsat.utils)": [[0, "GPSat.utils.expand_dict_by_vals"], [23, "GPSat.utils.expand_dict_by_vals"]], "expert_loc (gpsat.prediction_locations.predictionlocations property)": [[0, "GPSat.prediction_locations.PredictionLocations.expert_loc"]], "file_suffix_engine_map (gpsat.dataloader.dataloader attribute)": [[0, "GPSat.dataloader.DataLoader.file_suffix_engine_map"]], "file_suffix_engine_map (gpsat.local_experts.localexpertdata attribute)": [[0, "GPSat.local_experts.LocalExpertData.file_suffix_engine_map"]], "file_suffix_engine_map (gpsat.local_experts.localexpertoi attribute)": [[0, "GPSat.local_experts.LocalExpertOI.file_suffix_engine_map"]], "from_file_start_end_datetime_gpod() (in module gpsat.datetime_utils)": [[0, "GPSat.datetime_utils.from_file_start_end_datetime_GPOD"]], "from_file_start_end_datetime_saral() (in module gpsat.datetime_utils)": [[0, "GPSat.datetime_utils.from_file_start_end_datetime_SARAL"]], "generate_local_expert_locations() (gpsat.dataloader.dataloader class method)": [[0, "GPSat.dataloader.DataLoader.generate_local_expert_locations"]], "get() (gpsat.postprocessing.smoothingconfig method)": [[0, "GPSat.postprocessing.SmoothingConfig.get"]], "get() (gpsat.vff.blockdiagmat method)": [[0, "GPSat.vff.BlockDiagMat.get"]], "get() (gpsat.vff.diagmat method)": [[0, "GPSat.vff.DiagMat.get"]], "get() (gpsat.vff.lowrankmat method)": [[0, "GPSat.vff.LowRankMat.get"]], "get() (gpsat.vff.lowrankmatneg method)": [[0, "GPSat.vff.LowRankMatNeg.get"]], "get() (gpsat.vff.rank1mat method)": [[0, "GPSat.vff.Rank1Mat.get"]], "get() (gpsat.vff.rank1matneg method)": [[0, "GPSat.vff.Rank1MatNeg.get"]], "get_attribute_from_table() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.get_attribute_from_table"], [5, "GPSat.dataloader.DataLoader.get_attribute_from_table"]], "get_bin_data_config() (in module gpsat.bin_data)": [[0, "GPSat.bin_data.get_bin_data_config"]], "get_col_values() (in module gpsat.utils)": [[0, "GPSat.utils.get_col_values"], [23, "GPSat.utils.get_col_values"]], "get_config_from_sysargv() (in module gpsat.utils)": [[0, "GPSat.utils.get_config_from_sysargv"], [23, "GPSat.utils.get_config_from_sysargv"]], "get_config_path() (in module gpsat)": [[0, "GPSat.get_config_path"]], "get_data_path() (in module gpsat)": [[0, "GPSat.get_data_path"]], "get_diag() (gpsat.vff.blockdiagmat method)": [[0, "GPSat.vff.BlockDiagMat.get_diag"]], "get_diag() (gpsat.vff.diagmat method)": [[0, "GPSat.vff.DiagMat.get_diag"]], "get_diag() (gpsat.vff.lowrankmat method)": [[0, "GPSat.vff.LowRankMat.get_diag"]], "get_diag() (gpsat.vff.rank1mat method)": [[0, "GPSat.vff.Rank1Mat.get_diag"]], "get_dirs_to_search() (in module gpsat.read_and_store)": [[0, "GPSat.read_and_store.get_dirs_to_search"]], "get_git_information() (in module gpsat.utils)": [[0, "GPSat.utils.get_git_information"], [23, "GPSat.utils.get_git_information"]], "get_keys() (gpsat.dataloader.dataloader class method)": [[0, "GPSat.dataloader.DataLoader.get_keys"]], "get_masks_for_expert_loc() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.get_masks_for_expert_loc"], [5, "GPSat.dataloader.DataLoader.get_masks_for_expert_loc"]], "get_parent_path() (in module gpsat)": [[0, "GPSat.get_parent_path"]], "get_path() (in module gpsat)": [[0, "GPSat.get_path"]], "get_previous_oi_config() (in module gpsat.utils)": [[0, "GPSat.utils.get_previous_oi_config"], [23, "GPSat.utils.get_previous_oi_config"]], "get_projection() (in module gpsat.plot_utils)": [[0, "GPSat.plot_utils.get_projection"]], "get_results_from_h5file() (in module gpsat.local_experts)": [[0, "GPSat.local_experts.get_results_from_h5file"], [8, "GPSat.local_experts.get_results_from_h5file"]], "get_run_info() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.get_run_info"], [5, "GPSat.dataloader.DataLoader.get_run_info"]], "get_smooth_params_config() (in module gpsat.postprocessing)": [[0, "GPSat.postprocessing.get_smooth_params_config"]], "get_weighted_values() (in module gpsat.utils)": [[0, "GPSat.utils.get_weighted_values"], [23, "GPSat.utils.get_weighted_values"]], "get_where_list() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.get_where_list"], [5, "GPSat.dataloader.DataLoader.get_where_list"]], "get_where_list_legacy() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.get_where_list_legacy"], [5, "GPSat.dataloader.DataLoader.get_where_list_legacy"]], "global_select (gpsat.local_experts.localexpertdata attribute)": [[0, "GPSat.local_experts.LocalExpertData.global_select"]], "glue_local_predictions() (in module gpsat.postprocessing)": [[0, "GPSat.postprocessing.glue_local_predictions"]], "glue_local_predictions() (in module gpsat.utils)": [[0, "GPSat.utils.glue_local_predictions"], [23, "GPSat.utils.glue_local_predictions"]], "glue_local_predictions_1d() (in module gpsat.postprocessing)": [[0, "GPSat.postprocessing.glue_local_predictions_1d"], [22, "GPSat.postprocessing.glue_local_predictions_1d"]], "glue_local_predictions_2d() (in module gpsat.postprocessing)": [[0, "GPSat.postprocessing.glue_local_predictions_2d"], [22, "GPSat.postprocessing.glue_local_predictions_2d"]], "grid_2d_flatten() (in module gpsat.utils)": [[0, "GPSat.utils.grid_2d_flatten"], [23, "GPSat.utils.grid_2d_flatten"]], "guess_track_num() (in module gpsat.utils)": [[0, "GPSat.utils.guess_track_num"], [23, "GPSat.utils.guess_track_num"]], "hdf_tables_in_store() (gpsat.dataloader.dataloader class method)": [[0, "GPSat.dataloader.DataLoader.hdf_tables_in_store"], [5, "GPSat.dataloader.DataLoader.hdf_tables_in_store"]], "inv() (gpsat.vff.blockdiagmat method)": [[0, "GPSat.vff.BlockDiagMat.inv"]], "inv() (gpsat.vff.diagmat method)": [[0, "GPSat.vff.DiagMat.inv"]], "inv() (gpsat.vff.lowrankmat method)": [[0, "GPSat.vff.LowRankMat.inv"]], "inv() (gpsat.vff.rank1mat method)": [[0, "GPSat.vff.Rank1Mat.inv"]], "inv_diag() (gpsat.vff.blockdiagmat method)": [[0, "GPSat.vff.BlockDiagMat.inv_diag"]], "inv_diag() (gpsat.vff.diagmat method)": [[0, "GPSat.vff.DiagMat.inv_diag"]], "inv_diag() (gpsat.vff.lowrankmat method)": [[0, "GPSat.vff.LowRankMat.inv_diag"]], "inv_diag() (gpsat.vff.rank1mat method)": [[0, "GPSat.vff.Rank1Mat.inv_diag"]], "inverse_sigmoid() (in module gpsat.utils)": [[0, "GPSat.utils.inverse_sigmoid"], [23, "GPSat.utils.inverse_sigmoid"]], "inverse_softplus() (in module gpsat.utils)": [[0, "GPSat.utils.inverse_softplus"], [23, "GPSat.utils.inverse_softplus"]], "is_list_of_dict() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.is_list_of_dict"], [5, "GPSat.dataloader.DataLoader.is_list_of_dict"]], "json_load() (in module gpsat.utils)": [[0, "GPSat.utils.json_load"], [23, "GPSat.utils.json_load"]], "json_serializable() (in module gpsat.utils)": [[0, "GPSat.utils.json_serializable"], [23, "GPSat.utils.json_serializable"]], "kdt_tree_list_for_local_select() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.kdt_tree_list_for_local_select"], [5, "GPSat.dataloader.DataLoader.kdt_tree_list_for_local_select"]], "kron() (in module gpsat.vff)": [[0, "GPSat.vff.kron"]], "kron_two() (in module gpsat.vff)": [[0, "GPSat.vff.kron_two"]], "l_x (gpsat.postprocessing.smoothingconfig attribute)": [[0, "GPSat.postprocessing.SmoothingConfig.l_x"]], "l_y (gpsat.postprocessing.smoothingconfig attribute)": [[0, "GPSat.postprocessing.SmoothingConfig.l_y"]], "load() (gpsat.dataloader.dataloader class method)": [[0, "GPSat.dataloader.DataLoader.load"], [5, "GPSat.dataloader.DataLoader.load"]], "load() (gpsat.local_experts.localexpertdata method)": [[0, "GPSat.local_experts.LocalExpertData.load"]], "load_params() (gpsat.local_experts.localexpertoi method)": [[0, "GPSat.local_experts.LocalExpertOI.load_params"]], "local_data_select() (gpsat.dataloader.dataloader class method)": [[0, "GPSat.dataloader.DataLoader.local_data_select"], [5, "GPSat.dataloader.DataLoader.local_data_select"]], "local_select (gpsat.local_experts.localexpertdata attribute)": [[0, "GPSat.local_experts.LocalExpertData.local_select"]], "log_lines() (in module gpsat.utils)": [[0, "GPSat.utils.log_lines"], [23, "GPSat.utils.log_lines"]], "logdet() (gpsat.vff.blockdiagmat method)": [[0, "GPSat.vff.BlockDiagMat.logdet"]], "logdet() (gpsat.vff.diagmat method)": [[0, "GPSat.vff.DiagMat.logdet"]], "logdet() (gpsat.vff.lowrankmat method)": [[0, "GPSat.vff.LowRankMat.logdet"]], "logdet() (gpsat.vff.rank1mat method)": [[0, "GPSat.vff.Rank1Mat.logdet"]], "make_kuf() (in module gpsat.vff)": [[0, "GPSat.vff.make_Kuf"]], "make_kuf_np() (in module gpsat.vff)": [[0, "GPSat.vff.make_Kuf_np"]], "make_kuu() (in module gpsat.vff)": [[0, "GPSat.vff.make_Kuu"]], "make_kvs() (in module gpsat.vff)": [[0, "GPSat.vff.make_kvs"]], "make_kvs_np() (in module gpsat.vff)": [[0, "GPSat.vff.make_kvs_np"]], "make_kvs_two() (in module gpsat.vff)": [[0, "GPSat.vff.make_kvs_two"]], "make_kvs_two_np() (in module gpsat.vff)": [[0, "GPSat.vff.make_kvs_two_np"]], "make_multiindex_df() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.make_multiindex_df"], [5, "GPSat.dataloader.DataLoader.make_multiindex_df"]], "match() (in module gpsat.utils)": [[0, "GPSat.utils.match"], [23, "GPSat.utils.match"]], "matmul() (gpsat.vff.blockdiagmat method)": [[0, "GPSat.vff.BlockDiagMat.matmul"]], "matmul() (gpsat.vff.diagmat method)": [[0, "GPSat.vff.DiagMat.matmul"]], "matmul() (gpsat.vff.lowrankmat method)": [[0, "GPSat.vff.LowRankMat.matmul"]], "matmul() (gpsat.vff.rank1mat method)": [[0, "GPSat.vff.Rank1Mat.matmul"]], "matmul_sqrt() (gpsat.vff.blockdiagmat method)": [[0, "GPSat.vff.BlockDiagMat.matmul_sqrt"]], "matmul_sqrt() (gpsat.vff.diagmat method)": [[0, "GPSat.vff.DiagMat.matmul_sqrt"]], "matmul_sqrt() (gpsat.vff.lowrankmat method)": [[0, "GPSat.vff.LowRankMat.matmul_sqrt"]], "matmul_sqrt() (gpsat.vff.rank1mat method)": [[0, "GPSat.vff.Rank1Mat.matmul_sqrt"]], "matmul_sqrt_transpose() (gpsat.vff.blockdiagmat method)": [[0, "GPSat.vff.BlockDiagMat.matmul_sqrt_transpose"]], "matmul_sqrt_transpose() (gpsat.vff.diagmat method)": [[0, "GPSat.vff.DiagMat.matmul_sqrt_transpose"]], "matmul_sqrt_transpose() (gpsat.vff.lowrankmat method)": [[0, "GPSat.vff.LowRankMat.matmul_sqrt_transpose"]], "matmul_sqrt_transpose() (gpsat.vff.rank1mat method)": [[0, "GPSat.vff.Rank1Mat.matmul_sqrt_transpose"]], "max (gpsat.postprocessing.smoothingconfig attribute)": [[0, "GPSat.postprocessing.SmoothingConfig.max"]], "maximum_log_likelihood_objective() (gpsat.vff.gpr_kron method)": [[0, "GPSat.vff.GPR_kron.maximum_log_likelihood_objective"]], "min (gpsat.postprocessing.smoothingconfig attribute)": [[0, "GPSat.postprocessing.SmoothingConfig.min"]], "mindex_df_to_mindex_dataarray() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.mindex_df_to_mindex_dataarray"], [5, "GPSat.dataloader.DataLoader.mindex_df_to_mindex_dataarray"]], "module": [[0, "module-GPSat"], [0, "module-GPSat.bin_data"], [0, "module-GPSat.dataloader"], [0, "module-GPSat.dataprepper"], [0, "module-GPSat.datetime_utils"], [0, "module-GPSat.decorators"], [0, "module-GPSat.local_experts"], [0, "module-GPSat.plot_utils"], [0, "module-GPSat.postprocessing"], [0, "module-GPSat.prediction_locations"], [0, "module-GPSat.read_and_store"], [0, "module-GPSat.utils"], [0, "module-GPSat.vff"], [9, "module-GPSat.models.base_model"], [10, "module-GPSat.models.gpflow_models"], [10, "module-GPSat.models.vff_model"], [11, "module-GPSat.models.gpytorch_models"], [12, "module-GPSat.models.pure_python_gpr"], [13, "module-GPSat.models.sklearn_models"], [23, "module-GPSat.utils"]], "move_to_archive() (in module gpsat.utils)": [[0, "GPSat.utils.move_to_archive"], [23, "GPSat.utils.move_to_archive"]], "nested_dict_literal_eval() (in module gpsat.utils)": [[0, "GPSat.utils.nested_dict_literal_eval"], [23, "GPSat.utils.nested_dict_literal_eval"]], "nll() (in module gpsat.utils)": [[0, "GPSat.utils.nll"], [23, "GPSat.utils.nll"]], "not_nan() (in module gpsat.utils)": [[0, "GPSat.utils.not_nan"], [23, "GPSat.utils.not_nan"]], "obs_col (gpsat.local_experts.localexpertdata attribute)": [[0, "GPSat.local_experts.LocalExpertData.obs_col"]], "pandas_to_dict() (in module gpsat.utils)": [[0, "GPSat.utils.pandas_to_dict"], [23, "GPSat.utils.pandas_to_dict"]], "pip_freeze_to_dataframe() (in module gpsat.utils)": [[0, "GPSat.utils.pip_freeze_to_dataframe"], [23, "GPSat.utils.pip_freeze_to_dataframe"]], "plot_gpflow_minimal_example() (in module gpsat.plot_utils)": [[0, "GPSat.plot_utils.plot_gpflow_minimal_example"]], "plot_hist() (in module gpsat.plot_utils)": [[0, "GPSat.plot_utils.plot_hist"]], "plot_hist_from_results_data() (in module gpsat.plot_utils)": [[0, "GPSat.plot_utils.plot_hist_from_results_data"]], "plot_hyper_parameters() (in module gpsat.plot_utils)": [[0, "GPSat.plot_utils.plot_hyper_parameters"]], "plot_locations_and_obs() (gpsat.local_experts.localexpertoi method)": [[0, "GPSat.local_experts.LocalExpertOI.plot_locations_and_obs"]], "plot_pcolormesh() (in module gpsat.plot_utils)": [[0, "GPSat.plot_utils.plot_pcolormesh"]], "plot_pcolormesh_from_results_data() (in module gpsat.plot_utils)": [[0, "GPSat.plot_utils.plot_pcolormesh_from_results_data"]], "plot_wrapper() (in module gpsat.bin_data)": [[0, "GPSat.bin_data.plot_wrapper"]], "plot_wrapper() (in module gpsat.plot_utils)": [[0, "GPSat.plot_utils.plot_wrapper"]], "plot_xy() (in module gpsat.plot_utils)": [[0, "GPSat.plot_utils.plot_xy"]], "plot_xy_from_results_data() (in module gpsat.plot_utils)": [[0, "GPSat.plot_utils.plot_xy_from_results_data"]], "plots_from_config() (in module gpsat.plot_utils)": [[0, "GPSat.plot_utils.plots_from_config"]], "predict_f() (gpsat.vff.gpr_kron method)": [[0, "GPSat.vff.GPR_kron.predict_f"]], "pretty_print_class() (in module gpsat.utils)": [[0, "GPSat.utils.pretty_print_class"], [23, "GPSat.utils.pretty_print_class"]], "read_flat_files() (gpsat.dataloader.dataloader class method)": [[0, "GPSat.dataloader.DataLoader.read_flat_files"], [5, "GPSat.dataloader.DataLoader.read_flat_files"]], "read_from_multiple_files() (gpsat.dataloader.dataloader class method)": [[0, "GPSat.dataloader.DataLoader.read_from_multiple_files"], [5, "GPSat.dataloader.DataLoader.read_from_multiple_files"]], "read_from_npy() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.read_from_npy"], [5, "GPSat.dataloader.DataLoader.read_from_npy"]], "read_from_pkl_dict() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.read_from_pkl_dict"], [5, "GPSat.dataloader.DataLoader.read_from_pkl_dict"]], "read_hdf() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.read_hdf"], [5, "GPSat.dataloader.DataLoader.read_hdf"]], "read_kwargs (gpsat.local_experts.localexpertdata attribute)": [[0, "GPSat.local_experts.LocalExpertData.read_kwargs"]], "rmse() (in module gpsat.utils)": [[0, "GPSat.utils.rmse"], [23, "GPSat.utils.rmse"]], "row_select (gpsat.local_experts.localexpertdata attribute)": [[0, "GPSat.local_experts.LocalExpertData.row_select"]], "row_select_bool() (gpsat.dataloader.dataloader class method)": [[0, "GPSat.dataloader.DataLoader.row_select_bool"], [5, "GPSat.dataloader.DataLoader.row_select_bool"]], "run() (gpsat.local_experts.localexpertoi method)": [[0, "GPSat.local_experts.LocalExpertOI.run"], [8, "GPSat.local_experts.LocalExpertOI.run"]], "set_data() (gpsat.local_experts.localexpertoi method)": [[0, "GPSat.local_experts.LocalExpertOI.set_data"]], "set_data_source() (gpsat.local_experts.localexpertdata method)": [[0, "GPSat.local_experts.LocalExpertData.set_data_source"]], "set_expert_locations() (gpsat.local_experts.localexpertoi method)": [[0, "GPSat.local_experts.LocalExpertOI.set_expert_locations"]], "set_model() (gpsat.local_experts.localexpertoi method)": [[0, "GPSat.local_experts.LocalExpertOI.set_model"]], "set_pred_loc() (gpsat.local_experts.localexpertoi method)": [[0, "GPSat.local_experts.LocalExpertOI.set_pred_loc"]], "shape (gpsat.vff.blockdiagmat property)": [[0, "GPSat.vff.BlockDiagMat.shape"]], "shape (gpsat.vff.diagmat property)": [[0, "GPSat.vff.DiagMat.shape"]], "shape (gpsat.vff.lowrankmat property)": [[0, "GPSat.vff.LowRankMat.shape"]], "shape (gpsat.vff.lowrankmatneg property)": [[0, "GPSat.vff.LowRankMatNeg.shape"]], "shape (gpsat.vff.rank1mat property)": [[0, "GPSat.vff.Rank1Mat.shape"]], "shape (gpsat.vff.rank1matneg property)": [[0, "GPSat.vff.Rank1MatNeg.shape"]], "sigmoid() (in module gpsat.utils)": [[0, "GPSat.utils.sigmoid"], [23, "GPSat.utils.sigmoid"]], "smooth_hyperparameters() (in module gpsat.postprocessing)": [[0, "GPSat.postprocessing.smooth_hyperparameters"], [22, "GPSat.postprocessing.smooth_hyperparameters"]], "softplus() (in module gpsat.utils)": [[0, "GPSat.utils.softplus"], [23, "GPSat.utils.softplus"]], "solve() (gpsat.vff.blockdiagmat method)": [[0, "GPSat.vff.BlockDiagMat.solve"]], "solve() (gpsat.vff.diagmat method)": [[0, "GPSat.vff.DiagMat.solve"]], "solve() (gpsat.vff.lowrankmat method)": [[0, "GPSat.vff.LowRankMat.solve"]], "solve() (gpsat.vff.rank1mat method)": [[0, "GPSat.vff.Rank1Mat.solve"]], "sparse_true_array() (in module gpsat.utils)": [[0, "GPSat.utils.sparse_true_array"], [23, "GPSat.utils.sparse_true_array"]], "sqrt_dims (gpsat.vff.blockdiagmat property)": [[0, "GPSat.vff.BlockDiagMat.sqrt_dims"]], "sqrt_dims (gpsat.vff.diagmat property)": [[0, "GPSat.vff.DiagMat.sqrt_dims"]], "sqrt_dims (gpsat.vff.lowrankmat property)": [[0, "GPSat.vff.LowRankMat.sqrt_dims"]], "sqrt_dims (gpsat.vff.rank1mat property)": [[0, "GPSat.vff.Rank1Mat.sqrt_dims"]], "stats_on_vals() (in module gpsat.utils)": [[0, "GPSat.utils.stats_on_vals"], [23, "GPSat.utils.stats_on_vals"]], "table (gpsat.local_experts.localexpertdata attribute)": [[0, "GPSat.local_experts.LocalExpertData.table"]], "timer() (in module gpsat.decorators)": [[0, "GPSat.decorators.timer"]], "to_array() (in module gpsat.utils)": [[0, "GPSat.utils.to_array"], [23, "GPSat.utils.to_array"]], "trace_kix() (gpsat.vff.blockdiagmat method)": [[0, "GPSat.vff.BlockDiagMat.trace_KiX"]], "trace_kix() (gpsat.vff.diagmat method)": [[0, "GPSat.vff.DiagMat.trace_KiX"]], "trace_kix() (gpsat.vff.lowrankmat method)": [[0, "GPSat.vff.LowRankMat.trace_KiX"]], "trace_kix() (gpsat.vff.rank1mat method)": [[0, "GPSat.vff.Rank1Mat.trace_KiX"]], "track_num_for_date() (in module gpsat.utils)": [[0, "GPSat.utils.track_num_for_date"], [23, "GPSat.utils.track_num_for_date"]], "update_attr() (in module gpsat.read_and_store)": [[0, "GPSat.read_and_store.update_attr"]], "where (gpsat.local_experts.localexpertdata attribute)": [[0, "GPSat.local_experts.LocalExpertData.where"]], "write_dataframe_to_table() (gpsat.bin_data.bindata method)": [[0, "GPSat.bin_data.BinData.write_dataframe_to_table"]], "write_to_hdf() (gpsat.dataloader.dataloader class method)": [[0, "GPSat.dataloader.DataLoader.write_to_hdf"]], "write_to_netcdf() (gpsat.dataloader.dataloader static method)": [[0, "GPSat.dataloader.DataLoader.write_to_netcdf"]], "dataconfig (class in gpsat.config_dataclasses)": [[4, "GPSat.config_dataclasses.DataConfig"]], "experimentconfig (class in gpsat.config_dataclasses)": [[4, "GPSat.config_dataclasses.ExperimentConfig"]], "expertlocsconfig (class in gpsat.config_dataclasses)": [[4, "GPSat.config_dataclasses.ExpertLocsConfig"]], "modelconfig (class in gpsat.config_dataclasses)": [[4, "GPSat.config_dataclasses.ModelConfig"]], "predictionlocsconfig (class in gpsat.config_dataclasses)": [[4, "GPSat.config_dataclasses.PredictionLocsConfig"]], "runconfig (class in gpsat.config_dataclasses)": [[4, "GPSat.config_dataclasses.RunConfig"]], "__init__() (gpsat.local_experts.localexpertoi method)": [[8, "GPSat.local_experts.LocalExpertOI.__init__"]], "basegprmodel (class in gpsat.models.base_model)": [[9, "GPSat.models.base_model.BaseGPRModel"]], "gpsat.models.base_model": [[9, "module-GPSat.models.base_model"]], "__init__() (gpsat.models.base_model.basegprmodel method)": [[9, "GPSat.models.base_model.BaseGPRModel.__init__"]], "get_objective_function_value() (gpsat.models.base_model.basegprmodel method)": [[9, "GPSat.models.base_model.BaseGPRModel.get_objective_function_value"]], "get_parameters() (gpsat.models.base_model.basegprmodel method)": [[9, "GPSat.models.base_model.BaseGPRModel.get_parameters"]], "optimise_parameters() (gpsat.models.base_model.basegprmodel method)": [[9, "GPSat.models.base_model.BaseGPRModel.optimise_parameters"]], "param_names (gpsat.models.base_model.basegprmodel property)": [[9, "GPSat.models.base_model.BaseGPRModel.param_names"]], "predict() (gpsat.models.base_model.basegprmodel method)": [[9, "GPSat.models.base_model.BaseGPRModel.predict"]], "set_parameter_constraints() (gpsat.models.base_model.basegprmodel method)": [[9, "GPSat.models.base_model.BaseGPRModel.set_parameter_constraints"]], "set_parameters() (gpsat.models.base_model.basegprmodel method)": [[9, "GPSat.models.base_model.BaseGPRModel.set_parameters"]], "gpsat.models.gpflow_models": [[10, "module-GPSat.models.gpflow_models"]], "gpsat.models.vff_model": [[10, "module-GPSat.models.vff_model"]], "gpflowgprmodel (class in gpsat.models.gpflow_models)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel"]], "gpflowsgprmodel (class in gpsat.models.gpflow_models)": [[10, "GPSat.models.gpflow_models.GPflowSGPRModel"]], "gpflowsvgpmodel (class in gpsat.models.gpflow_models)": [[10, "GPSat.models.gpflow_models.GPflowSVGPModel"]], "gpflowvffmodel (class in gpsat.models.vff_model)": [[10, "GPSat.models.vff_model.GPflowVFFModel"]], "__init__() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.__init__"]], "__init__() (gpsat.models.gpflow_models.gpflowsgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSGPRModel.__init__"]], "__init__() (gpsat.models.gpflow_models.gpflowsvgpmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSVGPModel.__init__"]], "__init__() (gpsat.models.vff_model.gpflowvffmodel method)": [[10, "GPSat.models.vff_model.GPflowVFFModel.__init__"]], "get_inducing_chol() (gpsat.models.gpflow_models.gpflowsvgpmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSVGPModel.get_inducing_chol"]], "get_inducing_mean() (gpsat.models.gpflow_models.gpflowsvgpmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSVGPModel.get_inducing_mean"]], "get_inducing_points() (gpsat.models.gpflow_models.gpflowsgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSGPRModel.get_inducing_points"]], "get_inducing_points() (gpsat.models.gpflow_models.gpflowsvgpmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSVGPModel.get_inducing_points"]], "get_kernel_variance() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.get_kernel_variance"]], "get_kernel_variance() (gpsat.models.vff_model.gpflowvffmodel method)": [[10, "GPSat.models.vff_model.GPflowVFFModel.get_kernel_variance"]], "get_lengthscales() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.get_lengthscales"]], "get_lengthscales() (gpsat.models.vff_model.gpflowvffmodel method)": [[10, "GPSat.models.vff_model.GPflowVFFModel.get_lengthscales"]], "get_likelihood_variance() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.get_likelihood_variance"]], "get_objective_function_value() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.get_objective_function_value"]], "get_objective_function_value() (gpsat.models.gpflow_models.gpflowsgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSGPRModel.get_objective_function_value"]], "get_objective_function_value() (gpsat.models.gpflow_models.gpflowsvgpmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSVGPModel.get_objective_function_value"]], "get_objective_function_value() (gpsat.models.vff_model.gpflowvffmodel method)": [[10, "GPSat.models.vff_model.GPflowVFFModel.get_objective_function_value"]], "optimise_parameters() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.optimise_parameters"]], "optimise_parameters() (gpsat.models.gpflow_models.gpflowsgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSGPRModel.optimise_parameters"]], "optimise_parameters() (gpsat.models.gpflow_models.gpflowsvgpmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSVGPModel.optimise_parameters"]], "param_names (gpsat.models.gpflow_models.gpflowgprmodel property)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.param_names"]], "param_names (gpsat.models.gpflow_models.gpflowsgprmodel property)": [[10, "GPSat.models.gpflow_models.GPflowSGPRModel.param_names"]], "param_names (gpsat.models.gpflow_models.gpflowsvgpmodel property)": [[10, "GPSat.models.gpflow_models.GPflowSVGPModel.param_names"]], "predict() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.predict"]], "set_inducing_chol() (gpsat.models.gpflow_models.gpflowsvgpmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSVGPModel.set_inducing_chol"]], "set_inducing_mean() (gpsat.models.gpflow_models.gpflowsvgpmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSVGPModel.set_inducing_mean"]], "set_inducing_points() (gpsat.models.gpflow_models.gpflowsgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSGPRModel.set_inducing_points"]], "set_inducing_points() (gpsat.models.gpflow_models.gpflowsvgpmodel method)": [[10, "GPSat.models.gpflow_models.GPflowSVGPModel.set_inducing_points"]], "set_kernel_variance() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.set_kernel_variance"]], "set_kernel_variance() (gpsat.models.vff_model.gpflowvffmodel method)": [[10, "GPSat.models.vff_model.GPflowVFFModel.set_kernel_variance"]], "set_kernel_variance_constraints() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.set_kernel_variance_constraints"]], "set_kernel_variance_constraints() (gpsat.models.vff_model.gpflowvffmodel method)": [[10, "GPSat.models.vff_model.GPflowVFFModel.set_kernel_variance_constraints"]], "set_lengthscales() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.set_lengthscales"]], "set_lengthscales() (gpsat.models.vff_model.gpflowvffmodel method)": [[10, "GPSat.models.vff_model.GPflowVFFModel.set_lengthscales"]], "set_lengthscales_constraints() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.set_lengthscales_constraints"]], "set_lengthscales_constraints() (gpsat.models.vff_model.gpflowvffmodel method)": [[10, "GPSat.models.vff_model.GPflowVFFModel.set_lengthscales_constraints"]], "set_likelihood_variance() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.set_likelihood_variance"]], "set_likelihood_variance_constraints() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.set_likelihood_variance_constraints"]], "update_obs_data() (gpsat.models.gpflow_models.gpflowgprmodel method)": [[10, "GPSat.models.gpflow_models.GPflowGPRModel.update_obs_data"]], "exactgpr (class in gpsat.models.gpytorch_models)": [[11, "GPSat.models.gpytorch_models.ExactGPR"]], "gpsat.models.gpytorch_models": [[11, "module-GPSat.models.gpytorch_models"]], "gpytorchgprmodel (class in gpsat.models.gpytorch_models)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel"]], "gpytorchkissgpmodel (class in gpsat.models.gpytorch_models)": [[11, "GPSat.models.gpytorch_models.GPyTorchKISSGPModel"]], "forward() (gpsat.models.gpytorch_models.exactgpr method)": [[11, "GPSat.models.gpytorch_models.ExactGPR.forward"]], "get_kernel_variance() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.get_kernel_variance"]], "get_lengthscales() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.get_lengthscales"]], "get_lengthscales() (gpsat.models.gpytorch_models.gpytorchkissgpmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchKISSGPModel.get_lengthscales"]], "get_likelihood_variance() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.get_likelihood_variance"]], "get_objective_function_value() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.get_objective_function_value"]], "get_smoothness() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.get_smoothness"]], "get_smoothness() (gpsat.models.gpytorch_models.gpytorchkissgpmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchKISSGPModel.get_smoothness"]], "optimise_parameters() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.optimise_parameters"]], "param_names (gpsat.models.gpytorch_models.gpytorchgprmodel property)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.param_names"]], "predict() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.predict"]], "set_kernel_variance() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.set_kernel_variance"]], "set_kernel_variance_constraints() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.set_kernel_variance_constraints"]], "set_lengthscale_constraints() (gpsat.models.gpytorch_models.gpytorchkissgpmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchKISSGPModel.set_lengthscale_constraints"]], "set_lengthscales() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.set_lengthscales"]], "set_lengthscales() (gpsat.models.gpytorch_models.gpytorchkissgpmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchKISSGPModel.set_lengthscales"]], "set_lengthscales_constraints() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.set_lengthscales_constraints"]], "set_likelihood_variance() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.set_likelihood_variance"]], "set_likelihood_variance_constraints() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.set_likelihood_variance_constraints"]], "set_smoothness() (gpsat.models.gpytorch_models.gpytorchgprmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchGPRModel.set_smoothness"]], "set_smoothness() (gpsat.models.gpytorch_models.gpytorchkissgpmodel method)": [[11, "GPSat.models.gpytorch_models.GPyTorchKISSGPModel.set_smoothness"]], "gpr() (in module gpsat.models.pure_python_gpr)": [[12, "GPSat.models.pure_python_gpr.GPR"]], "gpsat.models.pure_python_gpr": [[12, "module-GPSat.models.pure_python_gpr"]], "nystroem() (in module gpsat.models.pure_python_gpr)": [[12, "GPSat.models.pure_python_gpr.Nystroem"]], "purepythongpr (class in gpsat.models.pure_python_gpr)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR"]], "sgpkernel() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.SGPkernel"]], "sgpkernel() (in module gpsat.models.pure_python_gpr)": [[12, "GPSat.models.pure_python_gpr.SGPkernel"]], "smlii() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.SMLII"]], "smlii_mod() (in module gpsat.models.pure_python_gpr)": [[12, "GPSat.models.pure_python_gpr.SMLII_mod"]], "get_kernel_variance() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.get_kernel_variance"]], "get_lengthscales() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.get_lengthscales"]], "get_likelihood_variance() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.get_likelihood_variance"]], "get_loglikelihood() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.get_loglikelihood"]], "get_objective_function_value() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.get_objective_function_value"]], "get_transform_funcs() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.get_transform_funcs"]], "optimise() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.optimise"]], "optimise_parameters() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.optimise_parameters"]], "param_names (gpsat.models.pure_python_gpr.purepythongpr property)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.param_names"]], "predict() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.predict"]], "set_kernel_variance() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.set_kernel_variance"]], "set_kernel_variance_constraints() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.set_kernel_variance_constraints"]], "set_lengthscales() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.set_lengthscales"]], "set_lengthscales_constraints() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.set_lengthscales_constraints"]], "set_likelihood_variance() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.set_likelihood_variance"]], "set_likelihood_variance_constraints() (gpsat.models.pure_python_gpr.purepythongpr method)": [[12, "GPSat.models.pure_python_gpr.PurePythonGPR.set_likelihood_variance_constraints"]], "gpsat.models.sklearn_models": [[13, "module-GPSat.models.sklearn_models"]], "get_kernel_variance() (gpsat.models.sklearn_models.sklearngprmodel method)": [[13, "GPSat.models.sklearn_models.sklearnGPRModel.get_kernel_variance"]], "get_lengthscales() (gpsat.models.sklearn_models.sklearngprmodel method)": [[13, "GPSat.models.sklearn_models.sklearnGPRModel.get_lengthscales"]], "get_likelihood_variance() (gpsat.models.sklearn_models.sklearngprmodel method)": [[13, "GPSat.models.sklearn_models.sklearnGPRModel.get_likelihood_variance"]], "get_objective_function_value() (gpsat.models.sklearn_models.sklearngprmodel method)": [[13, "GPSat.models.sklearn_models.sklearnGPRModel.get_objective_function_value"]], "optimise_parameters() (gpsat.models.sklearn_models.sklearngprmodel method)": [[13, "GPSat.models.sklearn_models.sklearnGPRModel.optimise_parameters"]], "param_names (gpsat.models.sklearn_models.sklearngprmodel property)": [[13, "GPSat.models.sklearn_models.sklearnGPRModel.param_names"]], "predict() (gpsat.models.sklearn_models.sklearngprmodel method)": [[13, "GPSat.models.sklearn_models.sklearnGPRModel.predict"]], "set_kernel_variance() (gpsat.models.sklearn_models.sklearngprmodel method)": [[13, "GPSat.models.sklearn_models.sklearnGPRModel.set_kernel_variance"]], "set_kernel_variance_constraints() (gpsat.models.sklearn_models.sklearngprmodel method)": [[13, "GPSat.models.sklearn_models.sklearnGPRModel.set_kernel_variance_constraints"]], "set_lengthscales() (gpsat.models.sklearn_models.sklearngprmodel method)": [[13, "GPSat.models.sklearn_models.sklearnGPRModel.set_lengthscales"]], "set_lengthscales_constraints() (gpsat.models.sklearn_models.sklearngprmodel method)": [[13, "GPSat.models.sklearn_models.sklearnGPRModel.set_lengthscales_constraints"]], "set_likelihood_variance() (gpsat.models.sklearn_models.sklearngprmodel method)": [[13, "GPSat.models.sklearn_models.sklearnGPRModel.set_likelihood_variance"]], "sklearngprmodel (class in gpsat.models.sklearn_models)": [[13, "GPSat.models.sklearn_models.sklearnGPRModel"]]}})